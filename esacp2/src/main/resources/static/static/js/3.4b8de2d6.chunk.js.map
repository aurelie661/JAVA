{"version":3,"sources":["../node_modules/canvg/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/canvg/node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/raf/index.js","../../src/performance-now.coffee","../node_modules/rgbcolor/index.js","../../src/SVGPathDataEncoder.ts","../../src/mathUtils.ts","../../src/SVGPathDataTransformer.ts","../../src/TransformableSVG.ts","../../src/SVGPathDataParser.ts","../../src/SVGPathData.ts","../node_modules/stackblur-canvas/dist/stackblur-es.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","module","exports","fn","self","this","args","arguments","apply","err","undefined","__esModule","obj","Object","defineProperty","enumerable","configurable","writable","now","require","root","window","global","vendors","suffix","raf","caf","i","length","last","id","queue","callback","_now","next","Math","max","setTimeout","cp","slice","cancelled","e","round","push","handle","call","cancel","polyfill","object","requestAnimationFrame","cancelAnimationFrame","color_string","ok","alpha","charAt","substr","replace","toLowerCase","simple_colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","color_defs","re","example","process","bits","parseInt","parseFloat","processor","exec","channels","r","g","b","isNaN","toRGB","toRGBA","toHex","toString","getHelpXML","examples","Array","j","sc","xml","document","createElement","setAttribute","list_item","list_color","RGBColor","example_div","style","cssText","appendChild","createTextNode","list_item_value","str","rotate","_a","rad","x","y","cos","sin","assertNumbers","numbers","Error","PI","annotateArcCommand","c","x1","y1","lArcFlag","sweepFlag","rX","rY","abs","x1_","y1_","testValue","pow","sqrt","c_ScaleTemp","c_Scale","cx_","cy_","cRot","xRot","cX","cY","phi1","atan2","phi2","intersectionUnitCircleLine","a","termSqr","term","SVGPathDataTransformer","DEG","lerp","t","arcAt","x2","phiDeg","bezierRoot","x0","x3","x01","x12","p","q","PRECISION","discriminantX4","bezierAt","s","TO_ABS","INFO","command","prevX","prevY","relative","y2","NORMALIZE_ST","prevCurveC2X","NaN","prevCurveC2Y","prevQuadCX","prevQuadCY","type","SVGPathData","SMOOTH_CURVE_TO","CURVE_TO","SMOOTH_QUAD_TO","QUAD_TO","QT_TO_C","prevQuadX1","prevQuadY1","f","prevXAbs","prevYAbs","pathStartXAbs","pathStartYAbs","MOVE_TO","result","CLOSE_PATH","MATRIX","d","pathStartX","origX1","origX2","comRel","sqr","HORIZ_LINE_TO","LINE_TO","VERT_LINE_TO","det","sinRot","cosRot","xCurve","yCurve","A","B","C","A1","B1","C1","newXRot","newSinRot","newCosRot","roundVal","rf","val","normalizeZ","normalizeH","normalizeV","pathStartY","ARC","EPS","skip","x1Rel","y1Rel","LINE_COMMANDS","xRel","yRel","x2Rel","y2Rel","dX","dY","atan","xOffset","yOffset","arc","y0","phiMin","min","deltaPhi","partCount","ceil","phiStart","phiEnd","deltaPhi_1","_e","_f","_g","transform","xTemp","yTemp","_b","_c","_d","CLONE","toAbs","qtToC","normST","clone","fixX","absX","maxX","minX","fixY","absY","maxY","minY","DRAWING_COMMANDS","xDerivRoots_1","derivRoot","yDerivRoots_1","xRotRad","x90","y90","phiMin_1","phiMax","normalizeXiEta","xi","eta","phi","xDerivRoots_2","map","yDerivRoots_2","Infinity","TransformableSVG","ROUND","TO_REL","NORMALIZE_HVZ","A_TO_C","eps","SANITIZE","TRANSLATE","SCALE","ROTATE","SKEW_X","SKEW_Y","X_AXIS_SYMMETRY","Y_AXIS_SYMMETRY","ANNOTATE_ARCS","isWhiteSpace","isDigit","charCodeAt","_super","_this","__extends","SVGPathDataParser","commands","parse","curArgs","canParseCommandOrComma","SyntaxError","finishCommand","isAArcFlag","curCommandType","curNumber","isEndingDigit","curNumberHasExp","curNumberHasExpDigits","curNumberHasDecimal","Number","COMMAND_ARG_COUNTS","curCommandRelative","create","chunk","parsedCommands_1","getPrototypeOf","cT","isArray","content","encode","boundsTransform","CALCULATE_BOUNDS","transformFunction","newCommands","transformedCommand","encodeSVGPath","path","parser","finish","_typeof","Symbol","iterator","constructor","prototype","mulTable","shgTable","getImageDataFromCanvas","canvas","topX","topY","width","height","getElementById","TypeError","context","getContext","getImageData","processCanvasRGBA","radius","imageData","stackEnd","pixels","data","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","stackIn","stackOut","yw","yi","mulSum","shgSum","pr","pg","pb","pa","_i","rInSum","gInSum","bInSum","aInSum","rOutSum","gOutSum","bOutSum","aOutSum","rSum","gSum","bSum","aSum","_i2","rbs","paInitial","_a2","_p","_stackOut","_r","_x","_pr","_pg","_pb","_pa","_rOutSum","_gOutSum","_bOutSum","_aOutSum","_rSum","_gSum","_bSum","_aSum","_i3","yp","_gInSum","_bInSum","_aInSum","_rInSum","_i4","_rbs","_y","_p2","processImageDataRGBA","putImageData","instance","Constructor","_classCallCheck"],"mappings":";+0jGAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAwBvCS,EAAOC,QApBP,SAA2BC,GACzB,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIR,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMe,EAAGK,MAAMJ,EAAME,GAEzB,SAASf,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOiB,GACdtB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASiB,GAGnElB,OAAMmB,QAMZT,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQS,YAAa,G,mBCtBxEV,EAAOC,QAfP,SAAyBU,EAAKnB,EAAKG,GAYjC,OAXIH,KAAOmB,EACTC,OAAOC,eAAeF,EAAKnB,EAAK,CAC9BG,MAAOA,EACPmB,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAInB,GAAOG,EAGNgB,GAITX,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQS,YAAa,G,sBChBxE,YAOA,IAPA,IAAIO,EAAMC,EAAQ,MACdC,EAAyB,qBAAXC,OAAyBC,EAASD,OAChDE,EAAU,CAAC,MAAO,UAClBC,EAAS,iBACTC,EAAML,EAAK,UAAYI,GACvBE,EAAMN,EAAK,SAAWI,IAAWJ,EAAK,gBAAkBI,GAEpDG,EAAI,GAAIF,GAAOE,EAAIJ,EAAQK,OAAQD,IACzCF,EAAML,EAAKG,EAAQI,GAAK,UAAYH,GACpCE,EAAMN,EAAKG,EAAQI,GAAK,SAAWH,IAC5BJ,EAAKG,EAAQI,GAAK,gBAAkBH,GAI7C,IAAIC,IAAQC,EAAK,CACf,IAAIG,EAAO,EACPC,EAAK,EACLC,EAAQ,GAGZN,EAAM,SAASO,GACb,GAAoB,IAAjBD,EAAMH,OAAc,CACrB,IAAIK,EAAOf,IACPgB,EAAOC,KAAKC,IAAI,EALJ,oBAKwBH,EAAOJ,IAC/CA,EAAOK,EAAOD,EACdI,YAAW,WACT,IAAIC,EAAKP,EAAMQ,MAAM,GAIrBR,EAAMH,OAAS,EACf,IAAI,IAAID,EAAI,EAAGA,EAAIW,EAAGV,OAAQD,IAC5B,IAAIW,EAAGX,GAAGa,UACR,IACEF,EAAGX,GAAGK,SAASH,GACf,MAAMY,GACNJ,YAAW,WAAa,MAAMI,IAAK,MAIxCN,KAAKO,MAAMR,IAOhB,OALAH,EAAMY,KAAK,CACTC,SAAUd,EACVE,SAAUA,EACVQ,WAAW,IAENV,GAGTJ,EAAM,SAASkB,GACb,IAAI,IAAIjB,EAAI,EAAGA,EAAII,EAAMH,OAAQD,IAC5BI,EAAMJ,GAAGiB,SAAWA,IACrBb,EAAMJ,GAAGa,WAAY,IAM7BvC,EAAOC,QAAU,SAASC,GAIxB,OAAOsB,EAAIoB,KAAKzB,EAAMjB,IAExBF,EAAOC,QAAQ4C,OAAS,WACtBpB,EAAIlB,MAAMY,EAAMb,YAElBN,EAAOC,QAAQ6C,SAAW,SAASC,GAC5BA,IACHA,EAAS5B,GAEX4B,EAAOC,sBAAwBxB,EAC/BuB,EAAOE,qBAAuBxB,K,sDCzEhC,2BAAG,sDAAiB,YAApB,IACE,UAAiB,W,OAAG,mBACd,kCAAa,EAAhB,QACH,UAAiB,W,OAAI,IAAD,GAAoC,KACxD,EAAS,EAAQ,OAIjB,GAHA,EAAiB,WACf,M,OACA,KADA,EAAK,KACL,GAAc,EAAG,OAEnB,EAA4B,IAAnB,WACL,EAAW,EARZ,GASG,KAAH,KACH,UAAiB,W,OAAG,WAAa,GACjC,EAAW,KAFR,QAIC,EAAJ,QAAiB,W,OAAO,UAAJ,UAAuB,GACvC,GAAW,UALZ,a,mDCNLzB,EAAOC,QAAU,SAASiD,GACtB9C,KAAK+C,IAAK,EACV/C,KAAKgD,MAAQ,EAGiB,KAA1BF,EAAaG,OAAO,KACpBH,EAAeA,EAAaI,OAAO,EAAE,IAIzCJ,GADAA,EAAeA,EAAaK,QAAQ,KAAK,KACbC,cAI5B,IAAIC,EAAgB,CAChBC,UAAW,SACXC,aAAc,SACdC,KAAM,SACNC,WAAY,SACZC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,eAAgB,SAChBC,KAAM,SACNC,WAAY,SACZC,MAAO,SACPC,UAAW,SACXC,UAAW,SACXC,WAAY,SACZC,UAAW,SACXC,MAAO,SACPC,eAAgB,SAChBC,SAAU,SACVC,QAAS,SACTC,KAAM,SACNC,SAAU,SACVC,SAAU,SACVC,cAAe,SACfC,SAAU,SACVC,UAAW,SACXC,UAAW,SACXC,YAAa,SACbC,eAAgB,SAChBC,WAAY,SACZC,WAAY,SACZC,QAAS,SACTC,WAAY,SACZC,aAAc,SACdC,cAAe,SACfC,cAAe,SACfC,cAAe,SACfC,WAAY,SACZC,SAAU,SACVC,YAAa,SACbC,QAAS,SACTC,WAAY,SACZC,SAAU,SACVC,UAAW,SACXC,YAAa,SACbC,YAAa,SACbC,QAAS,SACTC,UAAW,SACXC,WAAY,SACZC,KAAM,SACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,YAAa,SACbC,SAAU,SACVC,QAAS,SACTC,UAAY,SACZC,OAAS,SACTC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,cAAe,SACfC,UAAW,SACXC,aAAc,SACdC,UAAW,SACXC,WAAY,SACZC,UAAW,SACXC,qBAAsB,SACtBC,UAAW,SACXC,WAAY,SACZC,UAAW,SACXC,YAAa,SACbC,cAAe,SACfC,aAAc,SACdC,eAAgB,SAChBC,eAAgB,SAChBC,eAAgB,SAChBC,YAAa,SACbC,KAAM,SACNC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,OAAQ,SACRC,iBAAkB,SAClBC,WAAY,SACZC,aAAc,SACdC,aAAc,SACdC,eAAgB,SAChBC,gBAAiB,SACjBC,kBAAmB,SACnBC,gBAAiB,SACjBC,gBAAiB,SACjBC,aAAc,SACdC,UAAW,SACXC,UAAW,SACXC,SAAU,SACVC,YAAa,SACbC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,UAAW,SACXC,OAAQ,SACRC,UAAW,SACXC,OAAQ,SACRC,cAAe,SACfC,UAAW,SACXC,cAAe,SACfC,cAAe,SACfC,WAAY,SACZC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,WAAY,SACZC,OAAQ,SACRC,cAAe,SACfC,IAAK,SACLC,UAAW,SACXC,UAAW,SACXC,YAAa,SACbC,OAAQ,SACRC,WAAY,SACZC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,UAAW,SACXC,KAAM,SACNC,YAAa,SACbC,UAAW,SACXC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,OAAQ,SACRC,UAAW,SACXC,OAAQ,SACRC,UAAW,SACXC,MAAO,SACPC,MAAO,SACPC,WAAY,SACZC,OAAQ,SACRC,YAAa,UAEjBvJ,EAAeO,EAAcP,IAAiBA,EAqD9C,IAjDA,IAAIwJ,EAAa,CACb,CACIC,GAAI,kEACJC,QAAS,CAAC,0BAA2B,yBACrCC,QAAS,SAAUC,GACf,MAAO,CACHC,SAASD,EAAK,IACdC,SAASD,EAAK,IACdC,SAASD,EAAK,IACdE,WAAWF,EAAK,OAI5B,CACIH,GAAI,+CACJC,QAAS,CAAC,oBAAqB,oBAC/BC,QAAS,SAAUC,GACf,MAAO,CACHC,SAASD,EAAK,IACdC,SAASD,EAAK,IACdC,SAASD,EAAK,OAI1B,CACIH,GAAI,qDACJC,QAAS,CAAC,UAAW,UACrBC,QAAS,SAAUC,GACf,MAAO,CACHC,SAASD,EAAK,GAAI,IAClBC,SAASD,EAAK,GAAI,IAClBC,SAASD,EAAK,GAAI,OAI9B,CACIH,GAAI,qDACJC,QAAS,CAAC,OAAQ,OAClBC,QAAS,SAAUC,GACf,MAAO,CACHC,SAASD,EAAK,GAAKA,EAAK,GAAI,IAC5BC,SAASD,EAAK,GAAKA,EAAK,GAAI,IAC5BC,SAASD,EAAK,GAAKA,EAAK,GAAI,QAOnCpL,EAAI,EAAGA,EAAIgL,EAAW/K,OAAQD,IAAK,CACxC,IAAIiL,EAAKD,EAAWhL,GAAGiL,GACnBM,EAAYP,EAAWhL,GAAGmL,QAC1BC,EAAOH,EAAGO,KAAKhK,GACnB,GAAI4J,EAAM,CACN,IAAIK,EAAWF,EAAUH,GACzB1M,KAAKgN,EAAID,EAAS,GAClB/M,KAAKiN,EAAIF,EAAS,GAClB/M,KAAKkN,EAAIH,EAAS,GACdA,EAASxL,OAAS,IAClBvB,KAAKgD,MAAQ+J,EAAS,IAE1B/M,KAAK+C,IAAK,GAMlB/C,KAAKgN,EAAKhN,KAAKgN,EAAI,GAAKG,MAAMnN,KAAKgN,GAAM,EAAMhN,KAAKgN,EAAI,IAAO,IAAMhN,KAAKgN,EAC1EhN,KAAKiN,EAAKjN,KAAKiN,EAAI,GAAKE,MAAMnN,KAAKiN,GAAM,EAAMjN,KAAKiN,EAAI,IAAO,IAAMjN,KAAKiN,EAC1EjN,KAAKkN,EAAKlN,KAAKkN,EAAI,GAAKC,MAAMnN,KAAKkN,GAAM,EAAMlN,KAAKkN,EAAI,IAAO,IAAMlN,KAAKkN,EAC1ElN,KAAKgD,MAAShD,KAAKgD,MAAQ,EAAK,EAAMhD,KAAKgD,MAAQ,GAAOmK,MAAMnN,KAAKgD,OAAU,EAAMhD,KAAKgD,MAG1FhD,KAAKoN,MAAQ,WACT,MAAO,OAASpN,KAAKgN,EAAI,KAAOhN,KAAKiN,EAAI,KAAOjN,KAAKkN,EAAI,KAE7DlN,KAAKqN,OAAS,WACV,MAAO,QAAUrN,KAAKgN,EAAI,KAAOhN,KAAKiN,EAAI,KAAOjN,KAAKkN,EAAI,KAAOlN,KAAKgD,MAAQ,KAElFhD,KAAKsN,MAAQ,WACT,IAAIN,EAAIhN,KAAKgN,EAAEO,SAAS,IACpBN,EAAIjN,KAAKiN,EAAEM,SAAS,IACpBL,EAAIlN,KAAKkN,EAAEK,SAAS,IAIxB,OAHgB,GAAZP,EAAEzL,SAAayL,EAAI,IAAMA,GACb,GAAZC,EAAE1L,SAAa0L,EAAI,IAAMA,GACb,GAAZC,EAAE3L,SAAa2L,EAAI,IAAMA,GACtB,IAAMF,EAAIC,EAAIC,GAIzBlN,KAAKwN,WAAa,WAId,IAFA,IAAIC,EAAW,IAAIC,MAEVpM,EAAI,EAAGA,EAAIgL,EAAW/K,OAAQD,IAEnC,IADA,IAAIkL,EAAUF,EAAWhL,GAAGkL,QACnBmB,EAAI,EAAGA,EAAInB,EAAQjL,OAAQoM,IAChCF,EAASA,EAASlM,QAAUiL,EAAQmB,GAI5C,IAAK,IAAIC,KAAMvK,EACXoK,EAASA,EAASlM,QAAUqM,EAGhC,IAAIC,EAAMC,SAASC,cAAc,MACjCF,EAAIG,aAAa,KAAM,qBACvB,IAAS1M,EAAI,EAAGA,EAAImM,EAASlM,OAAQD,IACjC,IACI,IAAI2M,EAAYH,SAASC,cAAc,MACnCG,EAAa,IAAIC,SAASV,EAASnM,IACnC8M,EAAcN,SAASC,cAAc,OACzCK,EAAYC,MAAMC,QACV,oDAEkBJ,EAAWZ,QAF7B,WAGaY,EAAWZ,QAEhCc,EAAYG,YAAYT,SAASU,eAAe,SAChD,IAAIC,EAAkBX,SAASU,eAC3B,IAAMf,EAASnM,GAAK,OAAS4M,EAAWd,QAAU,OAASc,EAAWZ,SAE1EW,EAAUM,YAAYH,GACtBH,EAAUM,YAAYE,GACtBZ,EAAIU,YAAYN,GAElB,MAAM7L,IAEZ,OAAOyL,K,yXC7ONa,SCzDOC,EAAOC,EAA0BC,OAAzBC,OAAGC,OACzB,MAAO,CACLD,EAAIhN,KAAKkN,IAAIH,GAAOE,EAAIjN,KAAKmN,IAAIJ,GACjCC,EAAIhN,KAAKmN,IAAIJ,GAAOE,EAAIjN,KAAKkN,IAAIH,IAIrC,SACgBK,QAAc,sDAE1B,IAAK,IAAI5N,EAAI,EAAGA,EAAI6N,EAAQ5N,OAAQD,IAClC,GAAI,iBAAoB6N,EAAQ7N,GAC9B,MAAM,IAAI8N,MACR,2BAA2B9N,+BAA8B6N,EAAQ7N,iBAAgB6N,EAAQ7N,IAIjG,SAGF,IAAM+N,EAAKvN,KAAKuN,GAShB,SAAgBC,EAAmBC,EAAaC,EAAYC,GAC1DF,EAAEG,SAAY,IAAMH,EAAEG,SAAY,EAAI,EACtCH,EAAEI,UAAa,IAAMJ,EAAEI,UAAa,EAAI,EAEnC,QAAAC,GAAIC,OAAIf,MAAGC,MAEhBa,EAAK9N,KAAKgO,IAAIP,EAAEK,IAChBC,EAAK/N,KAAKgO,IAAIP,EAAEM,IACV,yCAACE,OAAKC,OACNC,EAAYnO,KAAKoO,IAAIH,EAAK,GAAKjO,KAAKoO,IAAIN,EAAI,GAAK9N,KAAKoO,IAAIF,EAAK,GAAKlO,KAAKoO,IAAIL,EAAI,GAEnF,EAAII,IACNL,GAAM9N,KAAKqO,KAAKF,GAChBJ,GAAM/N,KAAKqO,KAAKF,IAElBV,EAAEK,GAAKA,EACPL,EAAEM,GAAKA,EACP,IAAMO,EAAetO,KAAKoO,IAAIN,EAAI,GAAK9N,KAAKoO,IAAIF,EAAK,GAAKlO,KAAKoO,IAAIL,EAAI,GAAK/N,KAAKoO,IAAIH,EAAK,GACpFM,GAAWd,EAAEG,WAAaH,EAAEI,UAAY,GAAK,GACjD7N,KAAKqO,KAAKrO,KAAKC,IAAI,GAAID,KAAKoO,IAAIN,EAAI,GAAK9N,KAAKoO,IAAIL,EAAI,GAAKO,GAAeA,IACtEE,EAAMV,EAAKI,EAAMH,EAAKQ,EACtBE,GAAOV,EAAKE,EAAMH,EAAKS,EACvBG,EAAO7B,EAAO,CAAC2B,EAAKC,GAAMhB,EAAEkB,KAAO,IAAMpB,GAE/CE,EAAEmB,GAAKF,EAAK,IAAMhB,EAAKV,GAAK,EAC5BS,EAAEoB,GAAKH,EAAK,IAAMf,EAAKV,GAAK,EAC5BQ,EAAEqB,KAAO9O,KAAK+O,OAAOb,EAAMO,GAAOV,GAAKE,EAAMO,GAAOV,GACpDL,EAAEuB,KAAOhP,KAAK+O,QAAQb,EAAMO,GAAOV,IAAME,EAAMO,GAAOV,GAClD,IAAML,EAAEI,WAAaJ,EAAEuB,KAAOvB,EAAEqB,OAClCrB,EAAEuB,MAAQ,EAAIzB,GAEZ,IAAME,EAAEI,WAAaJ,EAAEuB,KAAOvB,EAAEqB,OAClCrB,EAAEuB,MAAQ,EAAIzB,GAEhBE,EAAEqB,MAAQ,IAAMvB,EAChBE,EAAEuB,MAAQ,IAAMzB,EAalB,SAAgB0B,EAA2BC,EAAW9D,EAAWqC,GAC/DL,EAAc8B,EAAG9D,EAAGqC,GAEpB,IAAM0B,EAAUD,EAAIA,EAAI9D,EAAIA,EAAIqC,EAAIA,EAEpC,GAAI,EAAI0B,EACN,MAAO,GACF,GAAI,IAAMA,EACf,MAAO,CACL,CACGD,EAAIzB,GAAMyB,EAAIA,EAAI9D,EAAIA,GACtBA,EAAIqC,GAAMyB,EAAIA,EAAI9D,EAAIA,KAE7B,IAAMgE,EAAOpP,KAAKqO,KAAKc,GAEvB,MAAO,CACL,EACGD,EAAIzB,EAAIrC,EAAIgE,IAASF,EAAIA,EAAI9D,EAAIA,IACjCA,EAAIqC,EAAIyB,EAAIE,IAASF,EAAIA,EAAI9D,EAAIA,IACpC,EACG8D,EAAIzB,EAAIrC,EAAIgE,IAASF,EAAIA,EAAI9D,EAAIA,IACjCA,EAAIqC,EAAIyB,EAAIE,IAASF,EAAIA,EAAI9D,EAAIA,KAIxC,ICjGiBiE,EDiGJC,EAAMtP,KAAKuN,GAAK,IAE7B,SAAgBgC,EAAKL,EAAW9D,EAAWoE,GACzC,OAAQ,EAAIA,GAAKN,EAAIM,EAAIpE,EAG3B,SAAgBqE,EAAMhC,EAAWC,EAAYgC,EAAYC,GACvD,OAAOlC,EAAIzN,KAAKkN,IAAIyC,EAAS,IAAMpC,GAAMG,EAAK1N,KAAKmN,IAAIwC,EAAS,IAAMpC,GAAMmC,EAG9E,SAAgBE,EAAWC,EAAYnC,EAAYgC,EAAYI,GAC7D,IACMC,EAAMrC,EAAKmC,EACXG,EAAMN,EAAKhC,EAEXwB,EAAI,EAAIa,EAAM,GADRD,EAAKJ,GACa,EAAIM,EAC5B5E,EAAkB,GAAb4E,EAAMD,GACXtC,EAAI,EAAIsC,EAGd,OAAI/P,KAAKgO,IAAIkB,GATD,KAWH,EAAEzB,EAAIrC,GAiBjB,SAAmB6E,EAAWC,EAAWC,wBAEvC,IAAMC,EAAiBH,EAAIA,EAAI,EAAIC,EAEnC,GAAIE,GAAkBD,EACpB,MAAO,GACF,GAAIC,GAAkBD,EAC3B,MAAO,EAAEF,EAAI,GAEf,IAAMhR,EAAOe,KAAKqO,KAAK+B,GAEvB,MAAO,EAAGH,EAAI,EAAKhR,GAAQgR,EAAI,EAAKhR,GAXtC,CAfmBmM,EAAI8D,EAAGzB,EAAIyB,EAbhB,eAiBEmB,EAASR,EAAYnC,EAAYgC,EAAYI,EAAYN,GAEvE,IAAMc,EAAI,EAAId,EAMd,OAAOK,GALIS,EAAIA,EAAIA,GAKF5C,GAJN,EAAI4C,EAAIA,EAAId,GAIIE,GAHhB,EAAIY,EAAId,EAAIA,GAGcM,GAF1BN,EAAIA,EAAIA,ICnIrB,SAAiBH,GAuCf,SAAgBkB,IACd,OAAOC,GAAK,SAACC,EAASC,EAAOC,GAyB3B,OAxBIF,EAAQG,oBAEiBH,EAAQ/C,KACjC+C,EAAQ/C,IAAMgD,YAEWD,EAAQ9C,KACjC8C,EAAQ9C,IAAMgD,YAGWF,EAAQf,KACjCe,EAAQf,IAAMgB,YAEWD,EAAQI,KACjCJ,EAAQI,IAAMF,YAGWF,EAAQzD,IACjCyD,EAAQzD,GAAK0D,YAEYD,EAAQxD,IACjCwD,EAAQxD,GAAK0D,GAEfF,EAAQG,aAEHH,KAkEX,SAAgBK,IACd,IAAIC,EAAeC,IACfC,EAAeD,IACfE,EAAaF,IACbG,EAAaH,IAEjB,OAAOR,GAAK,SAACC,EAASC,EAAOC,GA8B3B,OA7BIF,EAAQW,KAAOC,EAAYC,kBAC7Bb,EAAQW,KAAOC,EAAYE,SAC3BR,EAAe1F,MAAM0F,GAAgBL,EAAQK,EAC7CE,EAAe5F,MAAM4F,GAAgBN,EAAQM,EAC7CR,EAAQ/C,GAAK+C,EAAQG,SAAWF,EAAQK,EAAe,EAAIL,EAAQK,EACnEN,EAAQ9C,GAAK8C,EAAQG,SAAWD,EAAQM,EAAe,EAAIN,EAAQM,GAEjER,EAAQW,KAAOC,EAAYE,UAC7BR,EAAeN,EAAQG,SAAWF,EAAQD,EAAQf,GAAKe,EAAQf,GAC/DuB,EAAeR,EAAQG,SAAWD,EAAQF,EAAQI,GAAKJ,EAAQI,KAE/DE,EAAeC,IACfC,EAAeD,KAEbP,EAAQW,KAAOC,EAAYG,iBAC7Bf,EAAQW,KAAOC,EAAYI,QAC3BP,EAAa7F,MAAM6F,GAAcR,EAAQQ,EACzCC,EAAa9F,MAAM8F,GAAcR,EAAQQ,EACzCV,EAAQ/C,GAAK+C,EAAQG,SAAWF,EAAQQ,EAAa,EAAIR,EAAQQ,EACjET,EAAQ9C,GAAK8C,EAAQG,SAAWD,EAAQQ,EAAa,EAAIR,EAAQQ,GAE/DV,EAAQW,KAAOC,EAAYI,SAC7BP,EAAaT,EAAQG,SAAWF,EAAQD,EAAQ/C,GAAK+C,EAAQ/C,GAC7DyD,EAAaV,EAAQG,SAAWD,EAAQF,EAAQ9C,GAAK8C,EAAQ9C,KAE7DuD,EAAaF,IACbG,EAAaH,KAGRP,KAYX,SAAgBiB,IACd,IAAIC,EAAaX,IACbY,EAAaZ,IAEjB,OAAOR,GAAK,SAACC,EAASC,EAAOC,GAQ3B,GAPIF,EAAQW,KAAOC,EAAYG,iBAC7Bf,EAAQW,KAAOC,EAAYI,QAC3BE,EAAatG,MAAMsG,GAAcjB,EAAQiB,EACzCC,EAAavG,MAAMuG,GAAcjB,EAAQiB,EACzCnB,EAAQ/C,GAAK+C,EAAQG,SAAWF,EAAQiB,EAAa,EAAIjB,EAAQiB,EACjElB,EAAQ9C,GAAK8C,EAAQG,SAAWD,EAAQiB,EAAa,EAAIjB,EAAQiB,GAE/DnB,EAAQW,KAAOC,EAAYI,QAAS,CACtCE,EAAalB,EAAQG,SAAWF,EAAQD,EAAQ/C,GAAK+C,EAAQ/C,GAC7DkE,EAAanB,EAAQG,SAAWD,EAAQF,EAAQ9C,GAAK8C,EAAQ9C,GAC7D,IAAMD,EAAK+C,EAAQ/C,GACbC,EAAK8C,EAAQ9C,GAEnB8C,EAAQW,KAAOC,EAAYE,SAC3Bd,EAAQ/C,KAAO+C,EAAQG,SAAW,EAAIF,GAAc,EAALhD,GAAU,EACzD+C,EAAQ9C,KAAO8C,EAAQG,SAAW,EAAID,GAAc,EAALhD,GAAU,EACzD8C,EAAQf,IAAMe,EAAQzD,EAAS,EAALU,GAAU,EACpC+C,EAAQI,IAAMJ,EAAQxD,EAAS,EAALU,GAAU,OAEpCgE,EAAaX,IACbY,EAAaZ,IAGf,OAAOP,KAGX,SAAgBD,EACdqB,GAEA,IAAIC,EAAW,EACXC,EAAW,EACXC,EAAgBhB,IAChBiB,EAAgBjB,IAEpB,OAAO,SAAmBP,GACxB,GAAIpF,MAAM2G,MAAoBvB,EAAQW,KAAOC,EAAYa,SACvD,MAAM,IAAI5E,MAAM,+BAGlB,IAAM6E,EAASN,EAAEpB,EAASqB,EAAUC,EAAUC,EAAeC,GAmB7D,OAjBIxB,EAAQW,KAAOC,EAAYe,aAC7BN,EAAWE,EACXD,EAAWE,YAGcxB,EAAQzD,IACjC8E,EAAYrB,EAAQG,SAAWkB,EAAWrB,EAAQzD,EAAIyD,EAAQzD,YAErCyD,EAAQxD,IACjC8E,EAAYtB,EAAQG,SAAWmB,EAAWtB,EAAQxD,EAAIwD,EAAQxD,GAG5DwD,EAAQW,KAAOC,EAAYa,UAC7BF,EAAgBF,EAChBG,EAAgBF,GAGXI,GAoFX,SAAgBE,EAAOnD,EAAW9D,EAAWqC,EAAW6E,EAAWhS,EAAWuR,GAG5E,OAFAzE,EAAc8B,EAAG9D,EAAGqC,EAAG6E,EAAGhS,EAAGuR,GAEtBrB,GAAK,SAACC,EAASC,EAAOC,EAAO4B,GAClC,IAAMC,EAAS/B,EAAQ/C,GACjB+E,EAAShC,EAAQf,GAGjBgD,EAASjC,EAAQG,WAAavF,MAAMkH,GACpCvF,WAA2ByD,EAAQzD,EAAIyD,EAAQzD,EAAK0F,EAAS,EAAIhC,EACjEzD,WAA2BwD,EAAQxD,EAAIwD,EAAQxD,EAAKyF,EAAS,EAAI/B,EA6BvE,SAASgC,EAAI3F,GAAa,OAAOA,EAAIA,EA3BjCyD,EAAQW,KAAOC,EAAYuB,eAAiB,IAAMxH,IACpDqF,EAAQW,KAAOC,EAAYwB,QAC3BpC,EAAQxD,EAAIwD,EAAQG,SAAW,EAAID,GAEjCF,EAAQW,KAAOC,EAAYyB,cAAgB,IAAMrF,IACnDgD,EAAQW,KAAOC,EAAYwB,QAC3BpC,EAAQzD,EAAIyD,EAAQG,SAAW,EAAIF,YAGVD,EAAQzD,IACjCyD,EAAQzD,EAAKyD,EAAQzD,EAAIkC,EAAMjC,EAAIQ,GAAMiF,EAAS,EAAIpS,aAE7BmQ,EAAQxD,IACjCwD,EAAQxD,EAAKD,EAAI5B,EAAKqF,EAAQxD,EAAIqF,GAAKI,EAAS,EAAIb,aAE3BpB,EAAQ/C,KACjC+C,EAAQ/C,GAAK+C,EAAQ/C,GAAKwB,EAAIuB,EAAQ9C,GAAKF,GAAKiF,EAAS,EAAIpS,aAEpCmQ,EAAQ9C,KACjC8C,EAAQ9C,GAAK6E,EAASpH,EAAIqF,EAAQ9C,GAAK2E,GAAKI,EAAS,EAAIb,aAEhCpB,EAAQf,KACjCe,EAAQf,GAAKe,EAAQf,GAAKR,EAAIuB,EAAQI,GAAKpD,GAAKiF,EAAS,EAAIpS,aAEpCmQ,EAAQI,KACjCJ,EAAQI,GAAK4B,EAASrH,EAAIqF,EAAQI,GAAKyB,GAAKI,EAAS,EAAIb,IAG3D,IAAMkB,EAAM7D,EAAIoD,EAAIlH,EAAIqC,EAExB,YAA2BgD,EAAQ9B,OAE7B,IAAMO,GAAK,IAAM9D,GAAK,IAAMqC,GAAK,IAAM6E,GAEzC,GAAI,IAAMS,SAIDtC,EAAQ3C,UACR2C,EAAQ1C,UACR0C,EAAQ9B,YACR8B,EAAQ7C,gBACR6C,EAAQ5C,UACf4C,EAAQW,KAAOC,EAAYwB,YACtB,CAEL,IAAMlE,EAAO8B,EAAQ9B,KAAO3O,KAAKuN,GAAK,IAOhCyF,EAAShT,KAAKmN,IAAIwB,GAClBsE,EAASjT,KAAKkN,IAAIyB,GAClBuE,EAAS,EAAIP,EAAIlC,EAAQ3C,IACzBqF,EAAS,EAAIR,EAAIlC,EAAQ1C,IACzBqF,EAAIT,EAAIM,GAAUC,EAASP,EAAIK,GAAUG,EACzCE,EAAI,EAAIL,EAASC,GAAUC,EAASC,GACpCG,EAAIX,EAAIK,GAAUE,EAASP,EAAIM,GAAUE,EAOzCI,EAAKH,EAAId,EAAIA,EAAIe,EAAIjI,EAAIkH,EAAIgB,EAAIlI,EAAIA,EACrCoI,EAAKH,GAAKnE,EAAIoD,EAAIlH,EAAIqC,GAAK,GAAK2F,EAAI3F,EAAI6E,EAAIgB,EAAIpE,EAAI9D,GACpDqI,EAAKL,EAAI3F,EAAIA,EAAI4F,EAAInE,EAAIzB,EAAI6F,EAAIpE,EAAIA,EAerCwE,GAAY1T,KAAK+O,MAAMyE,EAAID,EAAKE,GAAMzT,KAAKuN,IAAMvN,KAAKuN,GAAM,EAM5DoG,EAAY3T,KAAKmN,IAAIuG,GACrBE,EAAY5T,KAAKkN,IAAIwG,GAE3BjD,EAAQ3C,GAAK9N,KAAKgO,IAAI+E,GACpB/S,KAAKqO,KAAKkF,EAAKZ,EAAIiB,GAAaJ,EAAKG,EAAYC,EAAYH,EAAKd,EAAIgB,IACxElD,EAAQ1C,GAAK/N,KAAKgO,IAAI+E,GACpB/S,KAAKqO,KAAKkF,EAAKZ,EAAIgB,GAAaH,EAAKG,EAAYC,EAAYH,EAAKd,EAAIiB,IACxEnD,EAAQ9B,KAAiB,IAAV+E,EAAgB1T,KAAKuN,GAW1C,gBAH2BkD,EAAQ5C,WAAa,EAAIkF,IAClDtC,EAAQ5C,YAAc4C,EAAQ5C,WAEzB4C,KA1bKpB,QAAhB,SAAsBwE,GAEpB,SAASC,EAAGC,GAAe,OAAO/T,KAAKO,MAAMwT,EAAMF,GAAYA,EAC/D,oBAHoBA,QACpBzG,EAAcyG,GAEP,SAAepD,GA6BpB,gBA5B2BA,EAAQ/C,KACjC+C,EAAQ/C,GAAKoG,EAAGrD,EAAQ/C,cAEC+C,EAAQ9C,KACjC8C,EAAQ9C,GAAKmG,EAAGrD,EAAQ9C,cAGC8C,EAAQf,KACjCe,EAAQf,GAAKoE,EAAGrD,EAAQf,cAECe,EAAQI,KACjCJ,EAAQI,GAAKiD,EAAGrD,EAAQI,cAGCJ,EAAQzD,IACjCyD,EAAQzD,EAAI8G,EAAGrD,EAAQzD,aAEEyD,EAAQxD,IACjCwD,EAAQxD,EAAI6G,EAAGrD,EAAQxD,aAGEwD,EAAQ3C,KACjC2C,EAAQ3C,GAAKgG,EAAGrD,EAAQ3C,cAEC2C,EAAQ1C,KACjC0C,EAAQ1C,GAAK+F,EAAGrD,EAAQ1C,KAGnB0C,IAIKF,WA8BAlB,SAAhB,WACE,OAAOmB,GAAK,SAACC,EAASC,EAAOC,GAyB3B,OAxBKF,EAAQG,oBAEgBH,EAAQ/C,KACjC+C,EAAQ/C,IAAMgD,YAEWD,EAAQ9C,KACjC8C,EAAQ9C,IAAMgD,YAGWF,EAAQf,KACjCe,EAAQf,IAAMgB,YAEWD,EAAQI,KACjCJ,EAAQI,IAAMF,YAGWF,EAAQzD,IACjCyD,EAAQzD,GAAK0D,YAEYD,EAAQxD,IACjCwD,EAAQxD,GAAK0D,GAEfF,EAAQG,aAEHH,MAIKpB,gBAAhB,SAA8B2E,EAAmBC,EAAmBC,GAClE,oBAD4BF,mBAAmBC,mBAAmBC,MAC3D1D,GAAK,SAACC,EAASC,EAAOC,EAAO4B,EAAY4B,GAC9C,GAAI9I,MAAMkH,MAAiB9B,EAAQW,KAAOC,EAAYa,SACpD,MAAM,IAAI5E,MAAM,+BAuBlB,OArBI2G,GAAcxD,EAAQW,KAAOC,EAAYuB,gBAC3CnC,EAAQW,KAAOC,EAAYwB,QAC3BpC,EAAQxD,EAAIwD,EAAQG,SAAW,EAAID,GAEjCuD,GAAczD,EAAQW,KAAOC,EAAYyB,eAC3CrC,EAAQW,KAAOC,EAAYwB,QAC3BpC,EAAQzD,EAAIyD,EAAQG,SAAW,EAAIF,GAEjCsD,GAAcvD,EAAQW,KAAOC,EAAYe,aAC3C3B,EAAQW,KAAOC,EAAYwB,QAC3BpC,EAAQzD,EAAIyD,EAAQG,SAAW2B,EAAa7B,EAAQ6B,EACpD9B,EAAQxD,EAAIwD,EAAQG,SAAWuD,EAAaxD,EAAQwD,GAElD1D,EAAQW,KAAOC,EAAY+C,MAAQ,IAAM3D,EAAQ3C,IAAM,IAAM2C,EAAQ1C,MACvE0C,EAAQW,KAAOC,EAAYwB,eACpBpC,EAAQ3C,UACR2C,EAAQ1C,UACR0C,EAAQ9B,YACR8B,EAAQ7C,gBACR6C,EAAQ5C,WAEV4C,MAMKK,iBAgDAY,YA+BAlB,SAsCAnB,WAAhB,SAAyBgF,qBACvBjH,EAAciH,GACd,IAAItD,EAAeC,IACfC,EAAeD,IACfE,EAAaF,IACbG,EAAaH,IAEjB,OAAOR,GAAK,SAACC,EAASC,EAAOC,EAAO4B,EAAY4B,GAC9C,IAAMnG,EAAMhO,KAAKgO,IACbsG,KACAC,EAAQ,EACRC,EAAQ,EAwBZ,GAtBI/D,EAAQW,KAAOC,EAAYC,kBAC7BiD,EAAQlJ,MAAM0F,GAAgB,EAAIL,EAAQK,EAC1CyD,EAAQnJ,MAAM4F,GAAgB,EAAIN,EAAQM,GAExCR,EAAQW,MAAQC,EAAYE,SAAWF,EAAYC,kBACrDP,EAAeN,EAAQG,SAAWF,EAAQD,EAAQf,GAAKe,EAAQf,GAC/DuB,EAAeR,EAAQG,SAAWD,EAAQF,EAAQI,GAAKJ,EAAQI,KAE/DE,EAAeC,IACfC,EAAeD,KAEbP,EAAQW,KAAOC,EAAYG,gBAC7BN,EAAa7F,MAAM6F,GAAcR,EAAQ,EAAIA,EAAQQ,EACrDC,EAAa9F,MAAM8F,GAAcR,EAAQ,EAAIA,EAAQQ,GAC5CV,EAAQW,KAAOC,EAAYI,SACpCP,EAAaT,EAAQG,SAAWF,EAAQD,EAAQ/C,GAAK+C,EAAQ/C,GAC7DyD,EAAaV,EAAQG,SAAWD,EAAQF,EAAQ9C,GAAK8C,EAAQI,KAE7DK,EAAaF,IACbG,EAAaH,KAGXP,EAAQW,KAAOC,EAAYoD,eAC7BhE,EAAQW,KAAOC,EAAY+C,MAAQ,IAAM3D,EAAQ3C,IAAM,IAAM2C,EAAQ1C,KAAO0C,EAAQ7C,WACpF6C,EAAQW,KAAOC,EAAYE,UAAYd,EAAQW,KAAOC,EAAYC,iBAClEb,EAAQW,KAAOC,EAAYI,SAAWhB,EAAQW,KAAOC,EAAYG,eAAgB,CACjF,IAAMkD,WAA8BjE,EAAQzD,EAAI,EAC7CyD,EAAQG,SAAWH,EAAQzD,EAAIyD,EAAQzD,EAAI0D,EACxCiE,WAA8BlE,EAAQxD,EAAI,EAC7CwD,EAAQG,SAAWH,EAAQxD,EAAIwD,EAAQxD,EAAI0D,EAE9C4D,EAASlJ,MAAM6F,YACUT,EAAQ/C,GAAK6G,EAClC9D,EAAQG,SAAWH,EAAQzD,EACzByD,EAAQ/C,GAAKgD,EAHUQ,EAAaR,EAI1C8D,EAASnJ,MAAM8F,YACUV,EAAQ9C,GAAK6G,EAClC/D,EAAQG,SAAWH,EAAQxD,EACzBwD,EAAQ9C,GAAKgD,EAHUQ,EAAaR,EAK1C,IAAMiE,WAA+BnE,EAAQf,GAAK,EAC/Ce,EAAQG,SAAWH,EAAQzD,EAAIyD,EAAQf,GAAKgB,EACzCmE,WAA+BpE,EAAQI,GAAK,EAC/CJ,EAAQG,SAAWH,EAAQxD,EAAIwD,EAAQI,GAAKF,EAE3C3C,EAAI0G,IAASL,GAAOrG,EAAI2G,IAASN,GACnCrG,EAAIuG,IAAUF,GAAOrG,EAAIwG,IAAUH,GACnCrG,EAAI4G,IAAUP,GAAOrG,EAAI6G,IAAUR,IACnCC,MAUJ,OANI7D,EAAQW,KAAOC,EAAYe,YACzBpE,EAAI0C,EAAQ6B,IAAe8B,GAAOrG,EAAI2C,EAAQwD,IAAeE,IAC/DC,MAIGA,EAAO,GAAK7D,MAOP4B,WA0HAhD,SAAhB,SAAuBH,EAAWlC,EAAOC,gBAAPD,kBAAOC,KACvCG,EAAc8B,EAAGlC,EAAGC,GACpB,IAAME,EAAMnN,KAAKmN,IAAI+B,GACfhC,EAAMlN,KAAKkN,IAAIgC,GAErB,OAAOmD,EAAOnF,EAAKC,GAAMA,EAAKD,EAAKF,EAAIA,EAAIE,EAAMD,EAAIE,EAAKF,EAAID,EAAIG,EAAMF,EAAIC,IAE9DmC,YAAhB,SAA0ByF,EAAYC,GAEpC,gBAAA7J,IAFoC6J,KACpC3H,EAAc0H,EAAIC,GACX1C,EAAO,EAAG,EAAG,EAAG,EAAGyC,EAAIC,IAEhB1F,QAAhB,SAAsByF,EAAYC,GAEhC,gBAAA7J,IAFgC6J,KAChC3H,EAAc0H,EAAIC,GACX1C,EAAOyC,EAAI,EAAG,EAAGC,EAAI,EAAG,IAEjB1F,SAAhB,SAAuBH,GAErB,OADA9B,EAAc8B,GACPmD,EAAO,EAAG,EAAGrS,KAAKgV,KAAK9F,GAAI,EAAG,EAAG,IAE1BG,SAAhB,SAAuBH,GAErB,OADA9B,EAAc8B,GACPmD,EAAO,EAAGrS,KAAKgV,KAAK9F,GAAI,EAAG,EAAG,EAAG,IAE1BG,kBAAhB,SAAgC4F,GAE9B,oBAF8BA,KAC9B7H,EAAc6H,GACP5C,GAAQ,EAAG,EAAG,EAAG,EAAG4C,EAAS,IAEtB5F,kBAAhB,SAAgC6F,GAE9B,oBAF8BA,KAC9B9H,EAAc8H,GACP7C,EAAO,EAAG,EAAG,GAAI,EAAG,EAAG6C,IAGhB7F,SAAhB,WACE,OAAOmB,GAAK,SAACC,EAASC,EAAOC,GAC3B,OAAIU,EAAY+C,MAAQ3D,EAAQW,KD3UtC,SAAoB+D,EAAetF,EAAYuF,eACxCD,EAAIvG,IACPpB,EAAmB2H,EAAKtF,EAAIuF,GAQ9B,IALA,IAAMC,EAASrV,KAAKsV,IAAIH,EAAIrG,KAAOqG,EAAInG,MAAiDuG,EAAhCvV,KAAKC,IAAIkV,EAAIrG,KAAOqG,EAAInG,MAA4BqG,EACtGG,EAAYxV,KAAKyV,KAAKF,EAAW,IAEjCpD,EAAqB,IAAIvG,MAAM4J,GACjC9E,EAAQb,EAAIc,EAAQyE,EACf5V,EAAI,EAAGA,EAAIgW,EAAWhW,IAAK,CAClC,IAAMkW,EAAWnG,EAAK4F,EAAIrG,KAAOqG,EAAInG,KAAOxP,EAAIgW,GAC1CG,EAASpG,EAAK4F,EAAIrG,KAAOqG,EAAInG,MAAQxP,EAAI,GAAKgW,GAC9CI,EAAWD,EAASD,EACpB7D,EAAI,EAAI,EAAI7R,KAAK4J,IAAIgM,EAAWtG,EAAM,GAEtCuG,gEAACnI,OAAIC,OAGLmI,gCAAC9I,OAAGC,OACJ8I,wCAACrG,OAAImB,OACXsB,EAAO3S,GAAK,CAACoR,SAAUuE,EAAIvE,SAAUQ,KAAMC,EAAYE,UACvD,IAAMyE,EAAY,SAAChJ,EAAWC,GACtB,gCAACgJ,OAAOC,OACd,MAAO,CAACf,EAAIvG,GAAMqH,EAAOd,EAAItG,GAAMqH,IAErCpJ,SAACqF,aAAcA,aACfgE,SAAChE,aAAcA,aACfiE,SAACjE,YAAaA,YACVgD,EAAIvE,WACNuB,EAAO3S,GAAGkO,IAAMgD,EAChByB,EAAO3S,GAAGmO,IAAMgD,EAChBwB,EAAO3S,GAAGkQ,IAAMgB,EAChByB,EAAO3S,GAAGqR,IAAMF,EAChBwB,EAAO3S,GAAGwN,GAAK0D,EACfyB,EAAO3S,GAAGyN,GAAK0D,GAEhBD,GAAD2F,sBAAQ1F,OAEV,OAAOwB,EAvCT,CC4UmB1B,EAASA,EAAQG,SAAW,EAAIF,EAAOD,EAAQG,SAAW,EAAID,GAEpEF,MAIKpB,gBAAhB,WACE,OAAOmB,GAAK,SAAC/C,EAAGC,EAAIC,GAQlB,OAPIF,EAAEmD,WACJlD,EAAK,EACLC,EAAK,GAEH0D,EAAY+C,MAAQ3G,EAAE2D,MACxB5D,EAAmBC,EAAGC,EAAIC,GAErBF,MAGK6I,QAAhB,WACE,OAAO,SAAC7I,GACN,IAAM0E,EAAS,GAEf,IAAK,IAAM7U,KAAOmQ,EAChB0E,EAAO7U,GAA2BmQ,EAAEnQ,GAEtC,OAAO6U,IAIK9C,mBAAhB,WACE,IACMkH,EAAQhG,IACRiG,EAAQ9E,IACR+E,EAAS3F,IACTe,EACFrB,GAAK,SAACC,EAASqB,EAAUC,GAC3B,IAAMtE,EAAIgJ,EAAOD,EAAMD,EAjBlB,SAAC9I,GACN,IAAM0E,EAAS,GAEf,IAAK,IAAM7U,KAAOmQ,EAChB0E,EAAO7U,GAA2BmQ,EAAEnQ,GAEtC,OAAO6U,EAWsBuE,CAAMjG,MACnC,SAASkG,EAAKC,GACRA,EAAO/E,EAAEgF,OAAQhF,EAAEgF,KAAOD,GAC1BA,EAAO/E,EAAEiF,OAAQjF,EAAEiF,KAAOF,GAEhC,SAASG,EAAKC,GACRA,EAAOnF,EAAEoF,OAAQpF,EAAEoF,KAAOD,GAC1BA,EAAOnF,EAAEqF,OAAQrF,EAAEqF,KAAOF,GAgBhC,GAdIvJ,EAAE2D,KAAOC,EAAY8F,mBACvBR,EAAK7E,GACLiF,EAAKhF,IAEHtE,EAAE2D,KAAOC,EAAYuB,eACvB+D,EAAKlJ,EAAET,GAELS,EAAE2D,KAAOC,EAAYyB,cACvBiE,EAAKtJ,EAAER,GAELQ,EAAE2D,KAAOC,EAAYwB,UACvB8D,EAAKlJ,EAAET,GACP+J,EAAKtJ,EAAER,IAELQ,EAAE2D,KAAOC,EAAYE,SAAU,CAEjCoF,EAAKlJ,EAAET,GACP+J,EAAKtJ,EAAER,GAGP,IAFA,QAEwBmK,EAFJxH,EAAWkC,EAAUrE,EAAEC,GAAID,EAAEiC,GAAIjC,EAAET,GAE/BoK,eAClB,GADKC,SACY,EAAIA,GACvBV,EAAKtG,EAASyB,EAAUrE,EAAEC,GAAID,EAAEiC,GAAIjC,EAAET,EAAGqK,IAK7C,IAFA,QAEwBC,EAFJ1H,EAAWmC,EAAUtE,EAAEE,GAAIF,EAAEoD,GAAIpD,EAAER,GAE/BqK,eAClB,GADKD,SACY,EAAIA,GACvBN,EAAK1G,EAAS0B,EAAUtE,EAAEE,GAAIF,EAAEoD,GAAIpD,EAAER,EAAGoK,IAI/C,GAAI5J,EAAE2D,KAAOC,EAAY+C,IAAK,CAE5BuC,EAAKlJ,EAAET,GACP+J,EAAKtJ,EAAER,GACPO,EAAmBC,EAAGqE,EAAUC,GAwBhC,IArBA,IAAMwF,EAAU9J,EAAEkB,KAAO,IAAM3O,KAAKuN,GAE9BsC,EAAK7P,KAAKkN,IAAIqK,GAAW9J,EAAEK,GAC3BsH,EAAKpV,KAAKmN,IAAIoK,GAAW9J,EAAEK,GAC3B0J,GAAOxX,KAAKmN,IAAIoK,GAAW9J,EAAEM,GAC7B0J,EAAMzX,KAAKkN,IAAIqK,GAAW9J,EAAEM,GAI5BoI,oFAACuB,OAAQC,OAGTC,EAAiB,SAAC9K,OAAC+K,OAAIC,OAErBC,EAAe,IADN/X,KAAK+O,MAAM+I,EAAKD,GACJ7X,KAAKuN,GAEhC,OAAOwK,EAAML,EAASK,EAAM,IAAMA,OAKZC,EADJ/I,EAA2BuI,GAAM3H,EAAI,GAAGoI,IAAIL,GACxCI,gBAAbX,QACOK,GAAUL,EAAYM,GACpChB,EAAKlH,EAAMhC,EAAEmB,GAAIiB,EAAI2H,EAAKH,IAK9B,IADA,QACwBa,EADJjJ,EAA2BwI,GAAMrC,EAAI,GAAG6C,IAAIL,GACxCM,eAAa,CAAhC,IAAMb,WACOK,GAAUL,EAAYM,GACpCZ,EAAKtH,EAAMhC,EAAEoB,GAAIuG,EAAIqC,EAAKJ,KAIhC,OAAO5G,KAOT,OAJAoB,EAAEiF,KAAOqB,IACTtG,EAAEgF,UACFhF,EAAEqF,KAAOiB,IACTtG,EAAEoF,UACKpF,GAjmBX,CAAiBxC,WCLjB,iCAsEA,OArEE+I,2BAAMpL,GACJ,OAAO9O,KAAK8X,UAAU3G,EAAuBgJ,MAAMrL,KAGrDoL,6BACE,OAAOla,KAAK8X,UAAU3G,EAAuBkB,WAG/C6H,6BACE,OAAOla,KAAK8X,UAAU3G,EAAuBiJ,WAG/CF,kCAAalJ,EAAa9D,EAAaqC,GACrC,OAAOvP,KAAK8X,UAAU3G,EAAuBkJ,cAAcrJ,EAAG9D,EAAGqC,KAGnE2K,mCACE,OAAOla,KAAK8X,UAAU3G,EAAuByB,iBAG/CsH,6BACE,OAAOla,KAAK8X,UAAU3G,EAAuBqC,YAG/C0G,4BACE,OAAOla,KAAK8X,UAAU3G,EAAuBmJ,WAG/CJ,8BAASK,GACP,OAAOva,KAAK8X,UAAU3G,EAAuBqJ,SAASD,KAGxDL,+BAAUpL,EAAWC,GACnB,OAAO/O,KAAK8X,UAAU3G,EAAuBsJ,UAAU3L,EAAGC,KAG5DmL,2BAAMpL,EAAWC,GACf,OAAO/O,KAAK8X,UAAU3G,EAAuBuJ,MAAM5L,EAAGC,KAGxDmL,4BAAOlJ,EAAWlC,EAAYC,GAC5B,OAAO/O,KAAK8X,UAAU3G,EAAuBwJ,OAAO3J,EAAGlC,EAAGC,KAG5DmL,4BAAOlJ,EAAW9D,EAAWqC,EAAW6E,EAAWhS,EAAWuR,GAC5D,OAAO3T,KAAK8X,UAAU3G,EAAuBgD,OAAOnD,EAAG9D,EAAGqC,EAAG6E,EAAGhS,EAAGuR,KAGrEuG,2BAAMlJ,GACJ,OAAOhR,KAAK8X,UAAU3G,EAAuByJ,OAAO5J,KAGtDkJ,2BAAMlJ,GACJ,OAAOhR,KAAK8X,UAAU3G,EAAuB0J,OAAO7J,KAGtDkJ,+BAAUnD,GACR,OAAO/W,KAAK8X,UAAU3G,EAAuB2J,gBAAgB/D,KAG/DmD,+BAAUlD,GACR,OAAOhX,KAAK8X,UAAU3G,EAAuB4J,gBAAgB/D,KAG/DkD,oCACE,OAAOla,KAAK8X,UAAU3G,EAAuB6J,oBAlEjD,GCGMC,EAAe,SAAC1L,GACpB,YAAQA,GAAK,OAASA,GAAK,OAASA,GAAK,OAASA,GAC9C2L,EAAU,SAAC3L,GACf,UAAI4L,WAAW,IAAM5L,EAAE4L,WAAW,IAAM5L,EAAE4L,WAAW,IAAM,IAAIA,WAAW,kBAa1E,mBACEC,0BAVMC,YAAoB,GACpBA,kBAA2C,EAC3CA,wBACAA,4BACAA,qBACAA,2BACAA,yBACAA,UAAoB,KA6Q9B,OArRuCC,OAcrCC,4BAAOC,GAGL,gBAHKA,MACLxb,KAAKyb,MAAM,IAAKD,GAEZ,IAAMxb,KAAK0b,QAAQna,SAAWvB,KAAK2b,uBACrC,MAAM,IAAIC,YAAY,yCAExB,OAAOJ,GAGTD,2BAAM7M,EAAa8M,GAAnBD,wBAAmBC,MAOjB,IANA,IAAMK,EAAgB,SAACtJ,GACrBiJ,EAASlZ,KAAKiQ,GACd8I,EAAKK,QAAQna,OAAS,EACtB8Z,EAAKM,2BAGEra,EAAI,EAAGA,EAAIoN,EAAInN,OAAQD,IAAK,CACnC,IAAMiO,EAAIb,EAAIpN,GAERwa,IAAa9b,KAAK+b,iBAAmB5I,EAAY+C,KAC5B,IAAxBlW,KAAK0b,QAAQna,QAAwC,IAAxBvB,KAAK0b,QAAQna,QACjB,IAA1BvB,KAAKgc,UAAUza,QACK,MAAnBvB,KAAKgc,WAAwC,MAAnBhc,KAAKgc,WAC5BC,EAAgBf,EAAQ3L,KACR,MAAnBvP,KAAKgc,WAA2B,MAANzM,GAC3BuM,GAGF,IACEZ,EAAQ3L,IACP0M,EAMH,GAAI,MAAQ1M,GAAK,MAAQA,EAKzB,GACG,MAAQA,GAAK,MAAQA,IACtBvP,KAAKkc,iBACJlc,KAAKmc,sBAMR,GAAI,MAAQ5M,GAAMvP,KAAKkc,iBAAoBlc,KAAKoc,qBAAwBN,EAAxE,CAOA,GAAI9b,KAAKgc,YAAc,IAAMhc,KAAK+b,eAAgB,CAChD,IAAMlG,EAAMwG,OAAOrc,KAAKgc,WACxB,GAAI7O,MAAM0I,GACR,MAAM,IAAI+F,YAAY,4BAA4Bta,GAEpD,GAAItB,KAAK+b,iBAAmB5I,EAAY+C,IACtC,GAAI,IAAMlW,KAAK0b,QAAQna,QAAU,IAAMvB,KAAK0b,QAAQna,QAClD,GAAI,EAAIsU,EACN,MAAM,IAAI+F,YACR,kCAAkC/F,iBAAkBvU,YAGnD,IAAI,IAAMtB,KAAK0b,QAAQna,QAAU,IAAMvB,KAAK0b,QAAQna,SACrD,MAAQvB,KAAKgc,WAAa,MAAQhc,KAAKgc,UACzC,MAAM,IAAIJ,YACR,yBAAyB5b,KAAKgc,yBAAwB1a,OAK9DtB,KAAK0b,QAAQpZ,KAAKuT,GACd7V,KAAK0b,QAAQna,SAAW+a,EAAmBtc,KAAK+b,kBAC9C5I,EAAYuB,gBAAkB1U,KAAK+b,eACrCF,EAAc,CACZ3I,KAAMC,EAAYuB,cAClBhC,SAAU1S,KAAKuc,mBACfzN,EAAG+G,IAEI1C,EAAYyB,eAAiB5U,KAAK+b,eAC3CF,EAAc,CACZ3I,KAAMC,EAAYyB,aAClBlC,SAAU1S,KAAKuc,mBACfxN,EAAG8G,IAIL7V,KAAK+b,iBAAmB5I,EAAYa,SACpChU,KAAK+b,iBAAmB5I,EAAYwB,SACpC3U,KAAK+b,iBAAmB5I,EAAYG,gBAEpCuI,EAAc,CACZ3I,KAAMlT,KAAK+b,eACXrJ,SAAU1S,KAAKuc,mBACfzN,EAAG9O,KAAK0b,QAAQ,GAChB3M,EAAG/O,KAAK0b,QAAQ,KAGdvI,EAAYa,UAAYhU,KAAK+b,iBAC/B/b,KAAK+b,eAAiB5I,EAAYwB,UAE3B3U,KAAK+b,iBAAmB5I,EAAYE,SAC7CwI,EAAc,CACZ3I,KAAMC,EAAYE,SAClBX,SAAU1S,KAAKuc,mBACf/M,GAAIxP,KAAK0b,QAAQ,GACjBjM,GAAIzP,KAAK0b,QAAQ,GACjBlK,GAAIxR,KAAK0b,QAAQ,GACjB/I,GAAI3S,KAAK0b,QAAQ,GACjB5M,EAAG9O,KAAK0b,QAAQ,GAChB3M,EAAG/O,KAAK0b,QAAQ,KAET1b,KAAK+b,iBAAmB5I,EAAYC,gBAC7CyI,EAAc,CACZ3I,KAAMC,EAAYC,gBAClBV,SAAU1S,KAAKuc,mBACf/K,GAAIxR,KAAK0b,QAAQ,GACjB/I,GAAI3S,KAAK0b,QAAQ,GACjB5M,EAAG9O,KAAK0b,QAAQ,GAChB3M,EAAG/O,KAAK0b,QAAQ,KAET1b,KAAK+b,iBAAmB5I,EAAYI,QAC7CsI,EAAc,CACZ3I,KAAMC,EAAYI,QAClBb,SAAU1S,KAAKuc,mBACf/M,GAAIxP,KAAK0b,QAAQ,GACjBjM,GAAIzP,KAAK0b,QAAQ,GACjB5M,EAAG9O,KAAK0b,QAAQ,GAChB3M,EAAG/O,KAAK0b,QAAQ,KAET1b,KAAK+b,iBAAmB5I,EAAY+C,KAC7C2F,EAAc,CACZ3I,KAAMC,EAAY+C,IAClBxD,SAAU1S,KAAKuc,mBACf3M,GAAI5P,KAAK0b,QAAQ,GACjB7L,GAAI7P,KAAK0b,QAAQ,GACjBjL,KAAMzQ,KAAK0b,QAAQ,GACnBhM,SAAU1P,KAAK0b,QAAQ,GACvB/L,UAAW3P,KAAK0b,QAAQ,GACxB5M,EAAG9O,KAAK0b,QAAQ,GAChB3M,EAAG/O,KAAK0b,QAAQ,MAItB1b,KAAKgc,UAAY,GACjBhc,KAAKmc,yBACLnc,KAAKkc,mBACLlc,KAAKoc,uBACLpc,KAAK2b,0BAGP,IAAIV,EAAa1L,GAGjB,GAAI,MAAQA,GAAKvP,KAAK2b,uBAEpB3b,KAAK2b,+BAIP,GAAI,MAAQpM,GAAK,MAAQA,GAAK,MAAQA,EAMtC,GAAI0M,EACFjc,KAAKgc,UAAYzM,EACjBvP,KAAKoc,2BAFP,CAOA,GAAI,IAAMpc,KAAK0b,QAAQna,OACrB,MAAM,IAAIqa,YAAY,iCAAiCta,OAEzD,IAAKtB,KAAK2b,uBACR,MAAM,IAAIC,YACR,yBAAyBrM,gBAAejO,mCAK5C,GAFAtB,KAAK2b,0BAED,MAAQpM,GAAK,MAAQA,EAQlB,GAAI,MAAQA,GAAK,MAAQA,EAC9BvP,KAAK+b,eAAiB5I,EAAYuB,cAClC1U,KAAKuc,mBAAqB,MAAQhN,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BvP,KAAK+b,eAAiB5I,EAAYyB,aAClC5U,KAAKuc,mBAAqB,MAAQhN,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BvP,KAAK+b,eAAiB5I,EAAYa,QAClChU,KAAKuc,mBAAqB,MAAQhN,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BvP,KAAK+b,eAAiB5I,EAAYwB,QAClC3U,KAAKuc,mBAAqB,MAAQhN,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BvP,KAAK+b,eAAiB5I,EAAYE,SAClCrT,KAAKuc,mBAAqB,MAAQhN,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BvP,KAAK+b,eAAiB5I,EAAYC,gBAClCpT,KAAKuc,mBAAqB,MAAQhN,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BvP,KAAK+b,eAAiB5I,EAAYI,QAClCvT,KAAKuc,mBAAqB,MAAQhN,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BvP,KAAK+b,eAAiB5I,EAAYG,eAClCtT,KAAKuc,mBAAqB,MAAQhN,MAE7B,IAAI,MAAQA,GAAK,MAAQA,EAI9B,MAAM,IAAIqM,YAAY,yBAAyBrM,gBAAejO,OAH9DtB,KAAK+b,eAAiB5I,EAAY+C,IAClClW,KAAKuc,mBAAqB,MAAQhN,OAzClCiM,EAASlZ,KAAK,CACZ4Q,KAAMC,EAAYe,aAEpBlU,KAAK2b,0BACL3b,KAAK+b,gBAAkB,OA3BvB/b,KAAKgc,UAAYzM,EACjBvP,KAAKoc,oBAAsB,MAAQ7M,OArHnCvP,KAAKgc,WAAazM,EAClBvP,KAAKoc,4BANLpc,KAAKgc,WAAazM,OATlBvP,KAAKgc,WAAazM,EAClBvP,KAAKkc,wBANLlc,KAAKgc,WAAazM,EAClBvP,KAAKmc,sBAAwBnc,KAAKkc,gBA2MtC,OAAOV,GAKTD,+BAAUzD,GAoBR,OAnBetX,OAAOgc,OAAOxc,KAAM,CACjCyb,MAAO,CACLlc,eAAMkd,EAAejB,sBAKnB,IAJA,QAIgBkB,EAJOlc,OAAOmc,eAAe3c,MAAMyb,MAAMjZ,KACvDxC,KACAyc,GAEcC,eAAgB,CAA3B,IAAMnN,OACHqN,EAAK9E,EAAUvI,GACjB7B,MAAMmP,QAAQD,GAChBpB,EAASlZ,WAATkZ,EAAiBoB,GAEjBpB,EAASlZ,KAAKsa,GAGlB,OAAOpB,SAlR2D,CAGrCF,iBCJrC,WAAYwB,GAAZ,MACE1B,0BAEEC,EAAKG,SADH,iBAAoBsB,EACN3J,EAAYsI,MAAMqB,GAElBA,IA2DtB,OAlEiCxB,OAW/BnI,8BACE,OAAOA,EAAY4J,OAAO/c,KAAKwb,WAGjCrI,iCACE,IAAM6J,EAAkB7L,EAAuB8L,mBAG/C,OADAjd,KAAK8X,UAAUkF,GACRA,GAGT7J,+BACE+J,GAIA,IAFA,IAAMC,EAAc,OAEEvO,OAAK4M,SAAL5M,eAAe,CAAhC,IACGwO,EAAqBF,QAEvBxP,MAAMmP,QAAQO,GAChBD,EAAY7a,WAAZ6a,EAAoBC,GAEpBD,EAAY7a,KAAK8a,GAIrB,OADApd,KAAKwb,SAAW2B,EACTnd,MAGFmT,SAAP,SAAcqI,GACZ,O,SLtC0BA,GAC5B,IAAI9M,EAAM,GAELhB,MAAMmP,QAAQrB,KACjBA,EAAW,CAACA,IAEd,IAAK,IAAIla,EAAI,EAAGA,EAAIka,EAASja,OAAQD,IAAK,CACxC,IAAMiR,EAAUiJ,EAASla,GACzB,GAAIiR,EAAQW,OAASC,EAAYe,WAC/BxF,GAAO,SACF,GAAI6D,EAAQW,OAASC,EAAYuB,cACtChG,IAAQ6D,EAAQG,SAAW,IAAM,KAC/BH,EAAQzD,OACL,GAAIyD,EAAQW,OAASC,EAAYyB,aACtClG,IAAQ6D,EAAQG,SAAW,IAAM,KAC/BH,EAAQxD,OACL,GAAIwD,EAAQW,OAASC,EAAYa,QACtCtF,IAAQ6D,EAAQG,SAAW,IAAM,KAC/BH,EAAQzD,EApBJ,IAoBcyD,EAAQxD,OACvB,GAAIwD,EAAQW,OAASC,EAAYwB,QACtCjG,IAAQ6D,EAAQG,SAAW,IAAM,KAC/BH,EAAQzD,EAvBJ,IAuBcyD,EAAQxD,OACvB,GAAIwD,EAAQW,OAASC,EAAYE,SACtC3E,IAAQ6D,EAAQG,SAAW,IAAM,KAC/BH,EAAQ/C,GA1BJ,IA0Be+C,EAAQ9C,GA1BvB,IA2BE8C,EAAQf,GA3BV,IA2BqBe,EAAQI,GA3B7B,IA4BEJ,EAAQzD,EA5BV,IA4BoByD,EAAQxD,OAC7B,GAAIwD,EAAQW,OAASC,EAAYC,gBACtC1E,IAAQ6D,EAAQG,SAAW,IAAM,KAC/BH,EAAQf,GA/BJ,IA+Bee,EAAQI,GA/BvB,IAgCEJ,EAAQzD,EAhCV,IAgCoByD,EAAQxD,OAC7B,GAAIwD,EAAQW,OAASC,EAAYI,QACtC7E,IAAQ6D,EAAQG,SAAW,IAAM,KAC/BH,EAAQ/C,GAnCJ,IAmCe+C,EAAQ9C,GAnCvB,IAoCE8C,EAAQzD,EApCV,IAoCoByD,EAAQxD,OAC7B,GAAIwD,EAAQW,OAASC,EAAYG,eACtC5E,IAAQ6D,EAAQG,SAAW,IAAM,KAC/BH,EAAQzD,EAvCJ,IAuCcyD,EAAQxD,MACvB,IAAIwD,EAAQW,OAASC,EAAY+C,IAQtC,MAAM,IAAI9G,MACR,4BAA8BmD,EAAgBW,mBAAkB5R,OARlEoN,IAAQ6D,EAAQG,SAAW,IAAM,KAC/BH,EAAQ3C,GA1CJ,IA0Ce2C,EAAQ1C,GA1CvB,IA2CE0C,EAAQ9B,KA3CV,MA4CI8B,EAAQ7C,SA5CZ,MA4CgC6C,EAAQ5C,UA5CxC,IA6CE4C,EAAQzD,EA7CV,IA6CoByD,EAAQxD,GAQtC,OAAOL,EKbE2O,CAAc7B,IAGhBrI,QAAP,SAAamK,GACX,IAAMC,EAAS,IAAIhC,EACbC,EAAyB,GAG/B,OAFA+B,EAAO9B,MAAM6B,EAAM9B,GACnB+B,EAAOC,OAAOhC,GACPA,GAGOrI,aAAgB,EAChBA,UAAa,EACbA,gBAAmB,EACnBA,eAAkB,EAClBA,UAAc,GACdA,WAAe,GACfA,kBAAsB,GACtBA,UAAe,IACfA,iBAAsB,IACtBA,MAAW,IACXA,gBAAgBA,EAAYwB,QAAUxB,EAAYuB,cAAgBvB,EAAYyB,aAC9EzB,mBAAmBA,EAAYuB,cAAgBvB,EAAYyB,aAAezB,EAAYwB,QACtGxB,EAAYE,SAAWF,EAAYC,gBAAkBD,EAAYI,QACjEJ,EAAYG,eAAiBH,EAAY+C,MD3DJoF,CCNNA,GAoEpBgB,UACRnJ,EAAYa,SAAU,EACvBpF,EAACuE,EAAYwB,SAAU,EACvB/F,EAACuE,EAAYuB,eAAgB,EAC7B9F,EAACuE,EAAYyB,cAAe,EAC5BhG,EAACuE,EAAYe,YAAa,EAC1BtF,EAACuE,EAAYI,SAAU,EACvB3E,EAACuE,EAAYG,gBAAiB,EAC9B1E,EAACuE,EAAYE,UAAW,EACxBzE,EAACuE,EAAYC,iBAAkB,EAC/BxE,EAACuE,EAAY+C,KAAM,M,kCCpFvB,SAASuH,EAAQld,GAaf,OATEkd,EADoB,oBAAXC,QAAoD,kBAApBA,OAAOC,SACtC,SAAUpd,GAClB,cAAcA,GAGN,SAAUA,GAClB,OAAOA,GAAyB,oBAAXmd,QAAyBnd,EAAIqd,cAAgBF,QAAUnd,IAAQmd,OAAOG,UAAY,gBAAkBtd,IAI9GA,GAbjB,kCAkEA,IAAIudlwgEvgC,SAASC,EAAuBC,EAAQC,EAAMC,EAAMC,EAAOC,GAKzD,GAJsB,kBAAXJ,IACTA,EAASnQ,SAASwQ,eAAeL,KAG9BA,GAA8B,WAApBR,EAAQQ,MAA0B,eAAgBA,GAC/D,MAAM,IAAIM,UAAU,2EAGtB,IAAIC,EAAUP,EAAOQ,WAAW,MAEhC,IACE,OAAOD,EAAQE,aAAaR,EAAMC,EAAMC,EAAOC,GAC/C,MAAOjc,GACP,MAAM,IAAIgN,MAAM,gCAAkChN,IActD,SAASuc,EAAkBV,EAAQC,EAAMC,EAAMC,EAAOC,EAAQO,GAC5D,KAAIzR,MAAMyR,IAAWA,EAAS,GAA9B,CAIAA,GAAU,EACV,IAAIC,EAAYb,EAAuBC,EAAQC,EAAMC,EAAMC,EAAOC,GAClEQ,EAcF,SAA8BA,EAAWX,EAAMC,EAAMC,EAAOC,EAAQO,GAYlE,IAXA,IASIE,EATAC,EAASF,EAAUG,KACnBC,EAAM,EAAIL,EAAS,EAEnBM,EAAcd,EAAQ,EACtBe,EAAed,EAAS,EACxBe,EAAcR,EAAS,EACvBS,EAAYD,GAAeA,EAAc,GAAK,EAC9CE,EAAa,IAAIC,EACjBC,EAAQF,EAGHhe,EAAI,EAAGA,EAAI2d,EAAK3d,IACvBke,EAAQA,EAAM3d,KAAO,IAAI0d,EAErBje,IAAM8d,IACRN,EAAWU,GAIfA,EAAM3d,KAAOyd,EAQb,IAPA,IAAIG,EAAU,KACVC,EAAW,KACXC,EAAK,EACLC,EAAK,EACLC,EAAS/B,EAASc,GAClBkB,EAAS/B,EAASa,GAEb7P,EAAI,EAAGA,EAAIsP,EAAQtP,IAAK,CAC/ByQ,EAAQF,EAMR,IALA,IAAIS,EAAKhB,EAAOa,GACZI,EAAKjB,EAAOa,EAAK,GACjBK,EAAKlB,EAAOa,EAAK,GACjBM,EAAKnB,EAAOa,EAAK,GAEZO,EAAK,EAAGA,EAAKf,EAAae,IACjCX,EAAMxS,EAAI+S,EACVP,EAAMvS,EAAI+S,EACVR,EAAMtS,EAAI+S,EACVT,EAAMxO,EAAIkP,EACVV,EAAQA,EAAM3d,KAgBhB,IAbA,IAAIue,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAUpB,EAAcW,EACxBU,EAAUrB,EAAcY,EACxBU,EAAUtB,EAAca,EACxBU,EAAUvB,EAAcc,EACxBU,EAAOvB,EAAYU,EACnBc,EAAOxB,EAAYW,EACnBc,EAAOzB,EAAYY,EACnBc,EAAO1B,EAAYa,EAEdc,EAAM,EAAGA,EAAM5B,EAAa4B,IAAO,CAC1C,IAAIjP,EAAI6N,IAAOV,EAAc8B,EAAM9B,EAAc8B,IAAQ,GACrDhU,EAAI+R,EAAOhN,GACX9E,EAAI8R,EAAOhN,EAAI,GACf7E,EAAI6R,EAAOhN,EAAI,GACff,EAAI+N,EAAOhN,EAAI,GACfkP,EAAM7B,EAAc4B,EACxBJ,IAASpB,EAAMxS,EAAIA,GAAKiU,EACxBJ,IAASrB,EAAMvS,EAAIA,GAAKgU,EACxBH,IAAStB,EAAMtS,EAAIA,GAAK+T,EACxBF,IAASvB,EAAMxO,EAAIA,GAAKiQ,EACxBb,GAAUpT,EACVqT,GAAUpT,EACVqT,GAAUpT,EACVqT,GAAUvP,EACVwO,EAAQA,EAAM3d,KAGhB4d,EAAUH,EACVI,EAAWZ,EAEX,IAAK,IAAIhQ,EAAI,EAAGA,EAAIsP,EAAOtP,IAAK,CAC9B,IAAIoS,EAAYH,EAAOlB,GAAUC,EAGjC,GAFAf,EAAOa,EAAK,GAAKsB,EAEC,IAAdA,EAAiB,CACnB,IAAIC,EAAM,IAAMD,EAEhBnC,EAAOa,IAAOgB,EAAOf,GAAUC,GAAUqB,EACzCpC,EAAOa,EAAK,IAAMiB,EAAOhB,GAAUC,GAAUqB,EAC7CpC,EAAOa,EAAK,IAAMkB,EAAOjB,GAAUC,GAAUqB,OAE7CpC,EAAOa,GAAMb,EAAOa,EAAK,GAAKb,EAAOa,EAAK,GAAK,EAGjDgB,GAAQJ,EACRK,GAAQJ,EACRK,GAAQJ,EACRK,GAAQJ,EACRH,GAAWf,EAAQzS,EACnByT,GAAWhB,EAAQxS,EACnByT,GAAWjB,EAAQvS,EACnByT,GAAWlB,EAAQzO,EAEnB,IAAIoQ,EAAKtS,EAAI8P,EAAS,EAEtBwC,EAAKzB,GAAMyB,EAAKlC,EAAckC,EAAKlC,IAAgB,EAKnD0B,GAJAR,GAAUX,EAAQzS,EAAI+R,EAAOqC,GAK7BP,GAJAR,GAAUZ,EAAQxS,EAAI8R,EAAOqC,EAAK,GAKlCN,GAJAR,GAAUb,EAAQvS,EAAI6R,EAAOqC,EAAK,GAKlCL,GAJAR,GAAUd,EAAQzO,EAAI+N,EAAOqC,EAAK,GAKlC3B,EAAUA,EAAQ5d,KAClB,IAAIwf,GAAY3B,EACZ4B,GAAKD,GAAUrU,EACf6K,GAAKwJ,GAAUpU,EACfgL,GAAKoJ,GAAUnU,EACf0B,GAAKyS,GAAUrQ,EACnBwP,GAAWc,GACXb,GAAW5I,GACX6I,GAAWzI,GACX0I,GAAW/R,GACXwR,GAAUkB,GACVjB,GAAUxI,GACVyI,GAAUrI,GACVsI,GAAU3R,GACV8Q,EAAWA,EAAS7d,KACpB+d,GAAM,EAGRD,GAAMvB,EAGR,IAAK,IAAImD,GAAK,EAAGA,GAAKnD,EAAOmD,KAAM,CAGjC,IAAIC,GAAMzC,EAFVa,EAAK2B,IAAM,GAGPE,GAAM1C,EAAOa,EAAK,GAClB8B,GAAM3C,EAAOa,EAAK,GAClB+B,GAAM5C,EAAOa,EAAK,GAClBgC,GAAWxC,EAAcoC,GACzBK,GAAWzC,EAAcqC,GACzBK,GAAW1C,EAAcsC,GACzBK,GAAW3C,EAAcuC,GACzBK,GAAQ3C,EAAYmC,GACpBS,GAAQ5C,EAAYoC,GACpBS,GAAQ7C,EAAYqC,GACpBS,GAAQ9C,EAAYsC,GAExBnC,EAAQF,EAER,IAAK,IAAI8C,GAAM,EAAGA,GAAMhD,EAAagD,KACnC5C,EAAMxS,EAAIwU,GACVhC,EAAMvS,EAAIwU,GACVjC,EAAMtS,EAAIwU,GACVlC,EAAMxO,EAAI2Q,GACVnC,EAAQA,EAAM3d,KAShB,IANA,IAAIwgB,GAAKjE,EACLkE,GAAU,EACVC,GAAU,EACVC,GAAU,EACVC,GAAU,EAELC,GAAM,EAAGA,IAAO9D,EAAQ8D,KAAO,CACtC9C,EAAKyC,GAAKd,IAAM,EAEhB,IAAIoB,GAAOvD,EAAcsD,GAEzBV,KAAUxC,EAAMxS,EAAIwU,GAAMzC,EAAOa,IAAO+C,GACxCV,KAAUzC,EAAMvS,EAAIwU,GAAM1C,EAAOa,EAAK,IAAM+C,GAC5CT,KAAU1C,EAAMtS,EAAIwU,GAAM3C,EAAOa,EAAK,IAAM+C,GAC5CR,KAAU3C,EAAMxO,EAAI2Q,GAAM5C,EAAOa,EAAK,IAAM+C,GAC5CF,IAAWjB,GACXc,IAAWb,GACXc,IAAWb,GACXc,IAAWb,GACXnC,EAAQA,EAAM3d,KAEV6gB,GAAMvD,IACRkD,IAAMjE,GAIVwB,EAAK2B,GACL9B,EAAUH,EACVI,EAAWZ,EAEX,IAAK,IAAI8D,GAAK,EAAGA,GAAKvE,EAAQuE,KAAM,CAClC,IAAIC,GAAMjD,GAAM,EAEhBb,EAAO8D,GAAM,GAAKlB,GAAMQ,GAAQtC,GAAUC,EAEtC6B,GAAM,GACRA,GAAM,IAAMA,GACZ5C,EAAO8D,KAAQb,GAAQnC,GAAUC,GAAU6B,GAC3C5C,EAAO8D,GAAM,IAAMZ,GAAQpC,GAAUC,GAAU6B,GAC/C5C,EAAO8D,GAAM,IAAMX,GAAQrC,GAAUC,GAAU6B,IAE/C5C,EAAO8D,IAAO9D,EAAO8D,GAAM,GAAK9D,EAAO8D,GAAM,GAAK,EAGpDb,IAASJ,GACTK,IAASJ,GACTK,IAASJ,GACTK,IAASJ,GACTH,IAAYnC,EAAQzS,EACpB6U,IAAYpC,EAAQxS,EACpB6U,IAAYrC,EAAQvS,EACpB6U,IAAYtC,EAAQzO,EACpB6R,GAAMtB,KAAOsB,GAAMD,GAAKxD,GAAeD,EAAe0D,GAAM1D,GAAgBf,GAAS,EACrF4D,IAASS,IAAWhD,EAAQzS,EAAI+R,EAAO8D,IACvCZ,IAASK,IAAW7C,EAAQxS,EAAI8R,EAAO8D,GAAM,GAC7CX,IAASK,IAAW9C,EAAQvS,EAAI6R,EAAO8D,GAAM,GAC7CV,IAASK,IAAW/C,EAAQzO,EAAI+N,EAAO8D,GAAM,GAC7CpD,EAAUA,EAAQ5d,KAClB+f,IAAYJ,GAAM9B,EAAS1S,EAC3B6U,IAAYJ,GAAM/B,EAASzS,EAC3B6U,IAAYJ,GAAMhC,EAASxS,EAC3B6U,IAAYJ,GAAMjC,EAAS1O,EAC3ByR,IAAWjB,GACXc,IAAWb,GACXc,IAAWb,GACXc,IAAWb,GACXjC,EAAWA,EAAS7d,KACpB+d,GAAMxB,GAIV,OAAOS,EAnPKiE,CAAqBjE,EAAWX,EAAMC,EAAMC,EAAOC,EAAQO,GACvEX,EAAOQ,WAAW,MAAMsE,aAAalE,EAAWX,EAAMC,IAocxD,IAAIoB,EAIJ,SAASA,KA/lBT,SAAyByD,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAI1E,UAAU,qCA8lBtB2E,CAAgBljB,KAAMuf,GAEtBvf,KAAKgN,EAAI,EACThN,KAAKiN,EAAI,EACTjN,KAAKkN,EAAI,EACTlN,KAAKgR,EAAI,EACThR,KAAK6B,KAAO","file":"static/js/3.4b8de2d6.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","/*\n\tBased on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>\n\thttp://www.phpied.com/rgb-color-parser-in-javascript/\n*/\n\nmodule.exports = function(color_string) {\n    this.ok = false;\n    this.alpha = 1.0;\n\n    // strip any leading #\n    if (color_string.charAt(0) == '#') { // remove # if any\n        color_string = color_string.substr(1,6);\n    }\n\n    color_string = color_string.replace(/ /g,'');\n    color_string = color_string.toLowerCase();\n\n    // before getting into regexps, try simple matches\n    // and overwrite the input\n    var simple_colors = {\n        aliceblue: 'f0f8ff',\n        antiquewhite: 'faebd7',\n        aqua: '00ffff',\n        aquamarine: '7fffd4',\n        azure: 'f0ffff',\n        beige: 'f5f5dc',\n        bisque: 'ffe4c4',\n        black: '000000',\n        blanchedalmond: 'ffebcd',\n        blue: '0000ff',\n        blueviolet: '8a2be2',\n        brown: 'a52a2a',\n        burlywood: 'deb887',\n        cadetblue: '5f9ea0',\n        chartreuse: '7fff00',\n        chocolate: 'd2691e',\n        coral: 'ff7f50',\n        cornflowerblue: '6495ed',\n        cornsilk: 'fff8dc',\n        crimson: 'dc143c',\n        cyan: '00ffff',\n        darkblue: '00008b',\n        darkcyan: '008b8b',\n        darkgoldenrod: 'b8860b',\n        darkgray: 'a9a9a9',\n        darkgreen: '006400',\n        darkkhaki: 'bdb76b',\n        darkmagenta: '8b008b',\n        darkolivegreen: '556b2f',\n        darkorange: 'ff8c00',\n        darkorchid: '9932cc',\n        darkred: '8b0000',\n        darksalmon: 'e9967a',\n        darkseagreen: '8fbc8f',\n        darkslateblue: '483d8b',\n        darkslategray: '2f4f4f',\n        darkturquoise: '00ced1',\n        darkviolet: '9400d3',\n        deeppink: 'ff1493',\n        deepskyblue: '00bfff',\n        dimgray: '696969',\n        dodgerblue: '1e90ff',\n        feldspar: 'd19275',\n        firebrick: 'b22222',\n        floralwhite: 'fffaf0',\n        forestgreen: '228b22',\n        fuchsia: 'ff00ff',\n        gainsboro: 'dcdcdc',\n        ghostwhite: 'f8f8ff',\n        gold: 'ffd700',\n        goldenrod: 'daa520',\n        gray: '808080',\n        green: '008000',\n        greenyellow: 'adff2f',\n        honeydew: 'f0fff0',\n        hotpink: 'ff69b4',\n        indianred : 'cd5c5c',\n        indigo : '4b0082',\n        ivory: 'fffff0',\n        khaki: 'f0e68c',\n        lavender: 'e6e6fa',\n        lavenderblush: 'fff0f5',\n        lawngreen: '7cfc00',\n        lemonchiffon: 'fffacd',\n        lightblue: 'add8e6',\n        lightcoral: 'f08080',\n        lightcyan: 'e0ffff',\n        lightgoldenrodyellow: 'fafad2',\n        lightgrey: 'd3d3d3',\n        lightgreen: '90ee90',\n        lightpink: 'ffb6c1',\n        lightsalmon: 'ffa07a',\n        lightseagreen: '20b2aa',\n        lightskyblue: '87cefa',\n        lightslateblue: '8470ff',\n        lightslategray: '778899',\n        lightsteelblue: 'b0c4de',\n        lightyellow: 'ffffe0',\n        lime: '00ff00',\n        limegreen: '32cd32',\n        linen: 'faf0e6',\n        magenta: 'ff00ff',\n        maroon: '800000',\n        mediumaquamarine: '66cdaa',\n        mediumblue: '0000cd',\n        mediumorchid: 'ba55d3',\n        mediumpurple: '9370d8',\n        mediumseagreen: '3cb371',\n        mediumslateblue: '7b68ee',\n        mediumspringgreen: '00fa9a',\n        mediumturquoise: '48d1cc',\n        mediumvioletred: 'c71585',\n        midnightblue: '191970',\n        mintcream: 'f5fffa',\n        mistyrose: 'ffe4e1',\n        moccasin: 'ffe4b5',\n        navajowhite: 'ffdead',\n        navy: '000080',\n        oldlace: 'fdf5e6',\n        olive: '808000',\n        olivedrab: '6b8e23',\n        orange: 'ffa500',\n        orangered: 'ff4500',\n        orchid: 'da70d6',\n        palegoldenrod: 'eee8aa',\n        palegreen: '98fb98',\n        paleturquoise: 'afeeee',\n        palevioletred: 'd87093',\n        papayawhip: 'ffefd5',\n        peachpuff: 'ffdab9',\n        peru: 'cd853f',\n        pink: 'ffc0cb',\n        plum: 'dda0dd',\n        powderblue: 'b0e0e6',\n        purple: '800080',\n        rebeccapurple: '663399',\n        red: 'ff0000',\n        rosybrown: 'bc8f8f',\n        royalblue: '4169e1',\n        saddlebrown: '8b4513',\n        salmon: 'fa8072',\n        sandybrown: 'f4a460',\n        seagreen: '2e8b57',\n        seashell: 'fff5ee',\n        sienna: 'a0522d',\n        silver: 'c0c0c0',\n        skyblue: '87ceeb',\n        slateblue: '6a5acd',\n        slategray: '708090',\n        snow: 'fffafa',\n        springgreen: '00ff7f',\n        steelblue: '4682b4',\n        tan: 'd2b48c',\n        teal: '008080',\n        thistle: 'd8bfd8',\n        tomato: 'ff6347',\n        turquoise: '40e0d0',\n        violet: 'ee82ee',\n        violetred: 'd02090',\n        wheat: 'f5deb3',\n        white: 'ffffff',\n        whitesmoke: 'f5f5f5',\n        yellow: 'ffff00',\n        yellowgreen: '9acd32'\n    };\n    color_string = simple_colors[color_string] || color_string;\n    // emd of simple type-in colors\n\n    // array of color definition objects\n    var color_defs = [\n        {\n            re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*((?:\\d?\\.)?\\d)\\)$/,\n            example: ['rgba(123, 234, 45, 0.8)', 'rgba(255,234,245,1.0)'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1]),\n                    parseInt(bits[2]),\n                    parseInt(bits[3]),\n                    parseFloat(bits[4])\n                ];\n            }\n        },\n        {\n            re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n            example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1]),\n                    parseInt(bits[2]),\n                    parseInt(bits[3])\n                ];\n            }\n        },\n        {\n            re: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n            example: ['#00ff00', '336699'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1], 16),\n                    parseInt(bits[2], 16),\n                    parseInt(bits[3], 16)\n                ];\n            }\n        },\n        {\n            re: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n            example: ['#fb0', 'f0f'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1] + bits[1], 16),\n                    parseInt(bits[2] + bits[2], 16),\n                    parseInt(bits[3] + bits[3], 16)\n                ];\n            }\n        }\n    ];\n\n    // search through the definitions to find a match\n    for (var i = 0; i < color_defs.length; i++) {\n        var re = color_defs[i].re;\n        var processor = color_defs[i].process;\n        var bits = re.exec(color_string);\n        if (bits) {\n            var channels = processor(bits);\n            this.r = channels[0];\n            this.g = channels[1];\n            this.b = channels[2];\n            if (channels.length > 3) {\n                this.alpha = channels[3];\n            }\n            this.ok = true;\n        }\n\n    }\n\n    // validate/cleanup values\n    this.r = (this.r < 0 || isNaN(this.r)) ? 0 : ((this.r > 255) ? 255 : this.r);\n    this.g = (this.g < 0 || isNaN(this.g)) ? 0 : ((this.g > 255) ? 255 : this.g);\n    this.b = (this.b < 0 || isNaN(this.b)) ? 0 : ((this.b > 255) ? 255 : this.b);\n    this.alpha = (this.alpha < 0) ? 0 : ((this.alpha > 1.0 || isNaN(this.alpha)) ? 1.0 : this.alpha);\n\n    // some getters\n    this.toRGB = function () {\n        return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\n    }\n    this.toRGBA = function () {\n        return 'rgba(' + this.r + ', ' + this.g + ', ' + this.b + ', ' + this.alpha + ')';\n    }\n    this.toHex = function () {\n        var r = this.r.toString(16);\n        var g = this.g.toString(16);\n        var b = this.b.toString(16);\n        if (r.length == 1) r = '0' + r;\n        if (g.length == 1) g = '0' + g;\n        if (b.length == 1) b = '0' + b;\n        return '#' + r + g + b;\n    }\n\n    // help\n    this.getHelpXML = function () {\n\n        var examples = new Array();\n        // add regexps\n        for (var i = 0; i < color_defs.length; i++) {\n            var example = color_defs[i].example;\n            for (var j = 0; j < example.length; j++) {\n                examples[examples.length] = example[j];\n            }\n        }\n        // add type-in colors\n        for (var sc in simple_colors) {\n            examples[examples.length] = sc;\n        }\n\n        var xml = document.createElement('ul');\n        xml.setAttribute('id', 'rgbcolor-examples');\n        for (var i = 0; i < examples.length; i++) {\n            try {\n                var list_item = document.createElement('li');\n                var list_color = new RGBColor(examples[i]);\n                var example_div = document.createElement('div');\n                example_div.style.cssText =\n                        'margin: 3px; '\n                        + 'border: 1px solid black; '\n                        + 'background:' + list_color.toHex() + '; '\n                        + 'color:' + list_color.toHex()\n                ;\n                example_div.appendChild(document.createTextNode('test'));\n                var list_item_value = document.createTextNode(\n                    ' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex()\n                );\n                list_item.appendChild(example_div);\n                list_item.appendChild(list_item_value);\n                xml.appendChild(list_item);\n\n            } catch(e){}\n        }\n        return xml;\n\n    }\n\n}\n","import { SVGPathData } from \"./SVGPathData\";\nimport { SVGCommand } from \"./types\";\n\n// Encode SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\n\n// Private consts : Char groups\nconst WSP = \" \";\n\nexport function encodeSVGPath(commands: SVGCommand | SVGCommand[]) {\n  let str = \"\";\n\n  if (!Array.isArray(commands)) {\n    commands = [commands];\n  }\n  for (let i = 0; i < commands.length; i++) {\n    const command = commands[i];\n    if (command.type === SVGPathData.CLOSE_PATH) {\n      str += \"z\";\n    } else if (command.type === SVGPathData.HORIZ_LINE_TO) {\n      str += (command.relative ? \"h\" : \"H\") +\n        command.x;\n    } else if (command.type === SVGPathData.VERT_LINE_TO) {\n      str += (command.relative ? \"v\" : \"V\") +\n        command.y;\n    } else if (command.type === SVGPathData.MOVE_TO) {\n      str += (command.relative ? \"m\" : \"M\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.LINE_TO) {\n      str += (command.relative ? \"l\" : \"L\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.CURVE_TO) {\n      str += (command.relative ? \"c\" : \"C\") +\n        command.x1 + WSP + command.y1 +\n        WSP + command.x2 + WSP + command.y2 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.SMOOTH_CURVE_TO) {\n      str += (command.relative ? \"s\" : \"S\") +\n        command.x2 + WSP + command.y2 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.QUAD_TO) {\n      str += (command.relative ? \"q\" : \"Q\") +\n        command.x1 + WSP + command.y1 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.SMOOTH_QUAD_TO) {\n      str += (command.relative ? \"t\" : \"T\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.ARC) {\n      str += (command.relative ? \"a\" : \"A\") +\n        command.rX + WSP + command.rY +\n        WSP + command.xRot +\n        WSP + (+command.lArcFlag) + WSP + (+command.sweepFlag) +\n        WSP + command.x + WSP + command.y;\n    } else {\n      // Unknown command\n      throw new Error(\n        `Unexpected command type \"${ (command as any).type}\" at index ${i}.`);\n    }\n  }\n\n  return str;\n}\n","import { SVGPathData } from \"./SVGPathData\";\nimport { CommandA, CommandC } from \"./types\";\n\nexport function rotate([x, y]: [number, number], rad: number) {\n  return [\n    x * Math.cos(rad) - y * Math.sin(rad),\n    x * Math.sin(rad) + y * Math.cos(rad),\n  ];\n}\n\nconst DEBUG_CHECK_NUMBERS = true;\nexport function assertNumbers(...numbers: number[]) {\n  if (DEBUG_CHECK_NUMBERS) {\n    for (let i = 0; i < numbers.length; i++) {\n      if (\"number\" !== typeof numbers[i]) {\n        throw new Error(\n          `assertNumbers arguments[${i}] is not a number. ${typeof numbers[i]} == typeof ${numbers[i]}`);\n      }\n    }\n  }\n  return true;\n}\n\nconst PI = Math.PI;\n\n/**\n * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n * Fixes rX and rY.\n * Ensures lArcFlag and sweepFlag are 0 or 1\n * Adds center coordinates: command.cX, command.cY (relative or absolute, depending on command.relative)\n * Adds start and end arc parameters (in degrees): command.phi1, command.phi2; phi1 < phi2 iff. c.sweepFlag == true\n */\nexport function annotateArcCommand(c: CommandA, x1: number, y1: number) {\n  c.lArcFlag = (0 === c.lArcFlag) ? 0 : 1;\n  c.sweepFlag = (0 === c.sweepFlag) ? 0 : 1;\n  // tslint:disable-next-line\n  let {rX, rY, x, y} = c;\n\n  rX = Math.abs(c.rX);\n  rY = Math.abs(c.rY);\n  const [x1_, y1_] = rotate([(x1 - x) / 2, (y1 - y) / 2], -c.xRot / 180 * PI);\n  const testValue = Math.pow(x1_, 2) / Math.pow(rX, 2) + Math.pow(y1_, 2) / Math.pow(rY, 2);\n\n  if (1 < testValue) {\n    rX *= Math.sqrt(testValue);\n    rY *= Math.sqrt(testValue);\n  }\n  c.rX = rX;\n  c.rY = rY;\n  const c_ScaleTemp = (Math.pow(rX, 2) * Math.pow(y1_, 2) + Math.pow(rY, 2) * Math.pow(x1_, 2));\n  const c_Scale = (c.lArcFlag !== c.sweepFlag ? 1 : -1) *\n    Math.sqrt(Math.max(0, (Math.pow(rX, 2) * Math.pow(rY, 2) - c_ScaleTemp) / c_ScaleTemp));\n  const cx_ = rX * y1_ / rY * c_Scale;\n  const cy_ = -rY * x1_ / rX * c_Scale;\n  const cRot = rotate([cx_, cy_], c.xRot / 180 * PI);\n\n  c.cX = cRot[0] + (x1 + x) / 2;\n  c.cY = cRot[1] + (y1 + y) / 2;\n  c.phi1 = Math.atan2((y1_ - cy_) / rY, (x1_ - cx_) / rX);\n  c.phi2 = Math.atan2((-y1_ - cy_) / rY, (-x1_ - cx_) / rX);\n  if (0 === c.sweepFlag && c.phi2 > c.phi1) {\n    c.phi2 -= 2 * PI;\n  }\n  if (1 === c.sweepFlag && c.phi2 < c.phi1) {\n    c.phi2 += 2 * PI;\n  }\n  c.phi1 *= 180 / PI;\n  c.phi2 *= 180 / PI;\n}\n\n/**\n * Solves a quadratic system of equations of the form\n *      a * x + b * y = c\n *      x² + y² = 1\n * This can be understood as the intersection of the unit circle with a line.\n *      => y = (c - a x) / b\n *      => x² + (c - a x)² / b² = 1\n *      => x² b² + c² - 2 c a x + a² x² = b²\n *      => (a² + b²) x² - 2 a c x + (c² - b²) = 0\n */\nexport function intersectionUnitCircleLine(a: number, b: number, c: number): [number, number][] {\n  assertNumbers(a, b, c);\n  // cf. pqFormula\n  const termSqr = a * a + b * b - c * c;\n\n  if (0 > termSqr) {\n    return [];\n  } else if (0 === termSqr) {\n    return [\n      [\n        (a * c) / (a * a + b * b),\n        (b * c) / (a * a + b * b)]];\n  }\n  const term = Math.sqrt(termSqr);\n\n  return [\n    [\n      (a * c + b * term) / (a * a + b * b),\n      (b * c - a * term) / (a * a + b * b)],\n    [\n      (a * c - b * term) / (a * a + b * b),\n      (b * c + a * term) / (a * a + b * b)]];\n\n}\n\nexport const DEG = Math.PI / 180;\n\nexport function lerp(a: number, b: number, t: number) {\n  return (1 - t) * a + t * b;\n}\n\nexport function arcAt(c: number, x1: number, x2: number, phiDeg: number) {\n  return c + Math.cos(phiDeg / 180 * PI) * x1 + Math.sin(phiDeg / 180 * PI) * x2;\n}\n\nexport function bezierRoot(x0: number, x1: number, x2: number, x3: number) {\n  const EPS = 1e-6;\n  const x01 = x1 - x0;\n  const x12 = x2 - x1;\n  const x23 = x3 - x2;\n  const a = 3 * x01 + 3 * x23 - 6 * x12;\n  const b = (x12 - x01) * 6;\n  const c = 3 * x01;\n  // solve a * t² + b * t + c = 0\n\n  if (Math.abs(a) < EPS) {\n    // equivalent to b * t + c =>\n    return [-c / b];\n  }\n  return pqFormula(b / a, c / a, EPS);\n\n}\n\nexport function bezierAt(x0: number, x1: number, x2: number, x3: number, t: number) {\n  // console.log(x0, y0, x1, y1, x2, y2, x3, y3, t)\n  const s = 1 - t;\n  const c0 = s * s * s;\n  const c1 = 3 * s * s * t;\n  const c2 = 3 * s * t * t;\n  const c3 = t * t * t;\n\n  return x0 * c0 + x1 * c1 + x2 * c2 + x3 * c3;\n}\n\nfunction pqFormula(p: number, q: number, PRECISION = 1e-6) {\n  // 4 times the discriminant:in\n  const discriminantX4 = p * p / 4 - q;\n\n  if (discriminantX4 < -PRECISION) {\n    return [];\n  } else if (discriminantX4 <= PRECISION) {\n    return [-p / 2];\n  }\n  const root = Math.sqrt(discriminantX4);\n\n  return [-(p / 2) - root, -(p / 2) + root];\n\n}\n\nexport function a2c(arc: CommandA, x0: number, y0: number): CommandC[] {\n  if (!arc.cX) {\n    annotateArcCommand(arc, x0, y0);\n  }\n\n  const phiMin = Math.min(arc.phi1!, arc.phi2!), phiMax = Math.max(arc.phi1!, arc.phi2!), deltaPhi = phiMax - phiMin;\n  const partCount = Math.ceil(deltaPhi / 90 );\n\n  const result: CommandC[] = new Array(partCount);\n  let prevX = x0, prevY = y0;\n  for (let i = 0; i < partCount; i++) {\n    const phiStart = lerp(arc.phi1!, arc.phi2!, i / partCount);\n    const phiEnd = lerp(arc.phi1!, arc.phi2!, (i + 1) / partCount);\n    const deltaPhi = phiEnd - phiStart;\n    const f = 4 / 3 * Math.tan(deltaPhi * DEG / 4);\n    // x1/y1, x2/y2 and x/y coordinates on the unit circle for phiStart/phiEnd\n    const [x1, y1] = [\n      Math.cos(phiStart * DEG) - f * Math.sin(phiStart * DEG),\n      Math.sin(phiStart * DEG) + f * Math.cos(phiStart * DEG)];\n    const [x, y] = [Math.cos(phiEnd * DEG), Math.sin(phiEnd * DEG)];\n    const [x2, y2] = [x + f * Math.sin(phiEnd * DEG), y - f * Math.cos(phiEnd * DEG)];\n    result[i] = {relative: arc.relative, type: SVGPathData.CURVE_TO } as any;\n    const transform = (x: number, y: number) => {\n      const [xTemp, yTemp] = rotate([x * arc.rX, y * arc.rY], arc.xRot);\n      return [arc.cX! + xTemp, arc.cY! + yTemp];\n    };\n    [result[i].x1, result[i].y1] = transform(x1, y1);\n    [result[i].x2, result[i].y2] = transform(x2, y2);\n    [result[i].x, result[i].y] = transform(x, y);\n    if (arc.relative) {\n      result[i].x1 -= prevX;\n      result[i].y1 -= prevY;\n      result[i].x2 -= prevX;\n      result[i].y2 -= prevY;\n      result[i].x -= prevX;\n      result[i].y -= prevY;\n    }\n    [prevX, prevY] = [result[i].x, result[i].y];\n  }\n  return result;\n}\n","// Transform SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\n\nimport { a2c, annotateArcCommand, arcAt, assertNumbers, bezierAt, bezierRoot,\n  intersectionUnitCircleLine } from \"./mathUtils\";\nimport { SVGPathData } from \"./SVGPathData\";\nimport { SVGCommand, TransformFunction } from \"./types\";\n\nexport namespace SVGPathDataTransformer {\n  // Predefined transforming functions\n  // Rounds commands values\n  export function ROUND(roundVal = 1e13) {\n    assertNumbers(roundVal);\n    function rf(val: number) { return Math.round(val * roundVal) / roundVal; }\n    return function round(command: any) {\n      if (\"undefined\" !== typeof command.x1) {\n        command.x1 = rf(command.x1);\n      }\n      if (\"undefined\" !== typeof command.y1) {\n        command.y1 = rf(command.y1);\n      }\n\n      if (\"undefined\" !== typeof command.x2) {\n        command.x2 = rf(command.x2);\n      }\n      if (\"undefined\" !== typeof command.y2) {\n        command.y2 = rf(command.y2);\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        command.x = rf(command.x);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        command.y = rf(command.y);\n      }\n\n      if (\"undefined\" !== typeof command.rX) {\n        command.rX = rf(command.rX);\n      }\n      if (\"undefined\" !== typeof command.rY) {\n        command.rY = rf(command.rY);\n      }\n\n      return command;\n    };\n  }\n  // Relative to absolute commands\n  export function TO_ABS() {\n    return INFO((command, prevX, prevY) => {\n      if (command.relative) {\n        // x1/y1 values\n        if (\"undefined\" !== typeof command.x1) {\n          command.x1 += prevX;\n        }\n        if (\"undefined\" !== typeof command.y1) {\n          command.y1 += prevY;\n        }\n        // x2/y2 values\n        if (\"undefined\" !== typeof command.x2) {\n          command.x2 += prevX;\n        }\n        if (\"undefined\" !== typeof command.y2) {\n          command.y2 += prevY;\n        }\n        // Finally x/y values\n        if (\"undefined\" !== typeof command.x) {\n          command.x += prevX;\n        }\n        if (\"undefined\" !== typeof command.y) {\n          command.y += prevY;\n        }\n        command.relative = false;\n      }\n      return command;\n    });\n  }\n  // Absolute to relative commands\n  export function TO_REL() {\n    return INFO((command, prevX, prevY) => {\n      if (!command.relative) {\n        // x1/y1 values\n        if (\"undefined\" !== typeof command.x1) {\n          command.x1 -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y1) {\n          command.y1 -= prevY;\n        }\n        // x2/y2 values\n        if (\"undefined\" !== typeof command.x2) {\n          command.x2 -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y2) {\n          command.y2 -= prevY;\n        }\n        // Finally x/y values\n        if (\"undefined\" !== typeof command.x) {\n          command.x -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y) {\n          command.y -= prevY;\n        }\n        command.relative = true;\n      }\n      return command;\n    });\n  }\n  // Convert H, V, Z and A with rX = 0 to L\n  export function NORMALIZE_HVZ(normalizeZ = true, normalizeH = true, normalizeV = true) {\n    return INFO((command, prevX, prevY, pathStartX, pathStartY) => {\n      if (isNaN(pathStartX) && !(command.type & SVGPathData.MOVE_TO)) {\n        throw new Error(\"path must start with moveto\");\n      }\n      if (normalizeH && command.type & SVGPathData.HORIZ_LINE_TO) {\n        command.type = SVGPathData.LINE_TO;\n        command.y = command.relative ? 0 : prevY;\n      }\n      if (normalizeV && command.type & SVGPathData.VERT_LINE_TO) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? 0 : prevX;\n      }\n      if (normalizeZ && command.type & SVGPathData.CLOSE_PATH) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? pathStartX - prevX : pathStartX;\n        command.y = command.relative ? pathStartY - prevY : pathStartY;\n      }\n      if (command.type & SVGPathData.ARC && (0 === command.rX || 0 === command.rY)) {\n        command.type = SVGPathData.LINE_TO;\n        delete command.rX;\n        delete command.rY;\n        delete command.xRot;\n        delete command.lArcFlag;\n        delete command.sweepFlag;\n      }\n      return command;\n    });\n  }\n  /*\n   * Transforms smooth curves and quads to normal curves and quads (SsTt to CcQq)\n   */\n  export function NORMALIZE_ST() {\n    let prevCurveC2X = NaN;\n    let prevCurveC2Y = NaN;\n    let prevQuadCX = NaN;\n    let prevQuadCY = NaN;\n\n    return INFO((command, prevX, prevY) => {\n      if (command.type & SVGPathData.SMOOTH_CURVE_TO) {\n        command.type = SVGPathData.CURVE_TO;\n        prevCurveC2X = isNaN(prevCurveC2X) ? prevX : prevCurveC2X;\n        prevCurveC2Y = isNaN(prevCurveC2Y) ? prevY : prevCurveC2Y;\n        command.x1 = command.relative ? prevX - prevCurveC2X : 2 * prevX - prevCurveC2X;\n        command.y1 = command.relative ? prevY - prevCurveC2Y : 2 * prevY - prevCurveC2Y;\n      }\n      if (command.type & SVGPathData.CURVE_TO) {\n        prevCurveC2X = command.relative ? prevX + command.x2 : command.x2;\n        prevCurveC2Y = command.relative ? prevY + command.y2 : command.y2;\n      } else {\n        prevCurveC2X = NaN;\n        prevCurveC2Y = NaN;\n      }\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        command.type = SVGPathData.QUAD_TO;\n        prevQuadCX = isNaN(prevQuadCX) ? prevX : prevQuadCX;\n        prevQuadCY = isNaN(prevQuadCY) ? prevY : prevQuadCY;\n        command.x1 = command.relative ? prevX - prevQuadCX : 2 * prevX - prevQuadCX;\n        command.y1 = command.relative ? prevY - prevQuadCY : 2 * prevY - prevQuadCY;\n      }\n      if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadCX = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadCY = command.relative ? prevY + command.y1 : command.y1;\n      } else {\n        prevQuadCX = NaN;\n        prevQuadCY = NaN;\n      }\n\n      return command;\n    });\n  }\n  /*\n   * A quadratic bézier curve can be represented by a cubic bézier curve which has\n   * the same end points as the quadratic and both control points in place of the\n   * quadratic\"s one.\n   *\n   * This transformer replaces QqTt commands with Cc commands respectively.\n   * This is useful for reading path data into a system which only has a\n   * representation for cubic curves.\n   */\n  export function QT_TO_C() {\n    let prevQuadX1 = NaN;\n    let prevQuadY1 = NaN;\n\n    return INFO((command, prevX, prevY) => {\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        command.type = SVGPathData.QUAD_TO;\n        prevQuadX1 = isNaN(prevQuadX1) ? prevX : prevQuadX1;\n        prevQuadY1 = isNaN(prevQuadY1) ? prevY : prevQuadY1;\n        command.x1 = command.relative ? prevX - prevQuadX1 : 2 * prevX - prevQuadX1;\n        command.y1 = command.relative ? prevY - prevQuadY1 : 2 * prevY - prevQuadY1;\n      }\n      if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadX1 = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadY1 = command.relative ? prevY + command.y1 : command.y1;\n        const x1 = command.x1;\n        const y1 = command.y1;\n\n        command.type = SVGPathData.CURVE_TO;\n        command.x1 = ((command.relative ? 0 : prevX) + x1 * 2) / 3;\n        command.y1 = ((command.relative ? 0 : prevY) + y1 * 2) / 3;\n        command.x2 = (command.x + x1 * 2) / 3;\n        command.y2 = (command.y + y1 * 2) / 3;\n      } else {\n        prevQuadX1 = NaN;\n        prevQuadY1 = NaN;\n      }\n\n      return command;\n    });\n  }\n  export function INFO(\n    f: (command: any, prevXAbs: number, prevYAbs: number,\n        pathStartXAbs: number, pathStartYAbs: number) => any | any[]) {\n    let prevXAbs = 0;\n    let prevYAbs = 0;\n    let pathStartXAbs = NaN;\n    let pathStartYAbs = NaN;\n\n    return function transform(command: any) {\n      if (isNaN(pathStartXAbs) && !(command.type & SVGPathData.MOVE_TO)) {\n        throw new Error(\"path must start with moveto\");\n      }\n\n      const result = f(command, prevXAbs, prevYAbs, pathStartXAbs, pathStartYAbs);\n\n      if (command.type & SVGPathData.CLOSE_PATH) {\n        prevXAbs = pathStartXAbs;\n        prevYAbs = pathStartYAbs;\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        prevXAbs = (command.relative ? prevXAbs + command.x : command.x);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        prevYAbs = (command.relative ? prevYAbs + command.y : command.y);\n      }\n\n      if (command.type & SVGPathData.MOVE_TO) {\n        pathStartXAbs = prevXAbs;\n        pathStartYAbs = prevYAbs;\n      }\n\n      return result;\n    };\n  }\n  /*\n   * remove 0-length segments\n   */\n  export function SANITIZE(EPS = 0) {\n    assertNumbers(EPS);\n    let prevCurveC2X = NaN;\n    let prevCurveC2Y = NaN;\n    let prevQuadCX = NaN;\n    let prevQuadCY = NaN;\n\n    return INFO((command, prevX, prevY, pathStartX, pathStartY) => {\n      const abs = Math.abs;\n      let skip = false;\n      let x1Rel = 0;\n      let y1Rel = 0;\n\n      if (command.type & SVGPathData.SMOOTH_CURVE_TO) {\n        x1Rel = isNaN(prevCurveC2X) ? 0 : prevX - prevCurveC2X;\n        y1Rel = isNaN(prevCurveC2Y) ? 0 : prevY - prevCurveC2Y;\n      }\n      if (command.type & (SVGPathData.CURVE_TO | SVGPathData.SMOOTH_CURVE_TO)) {\n        prevCurveC2X = command.relative ? prevX + command.x2 : command.x2;\n        prevCurveC2Y = command.relative ? prevY + command.y2 : command.y2;\n      } else {\n        prevCurveC2X = NaN;\n        prevCurveC2Y = NaN;\n      }\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        prevQuadCX = isNaN(prevQuadCX) ? prevX : 2 * prevX - prevQuadCX;\n        prevQuadCY = isNaN(prevQuadCY) ? prevY : 2 * prevY - prevQuadCY;\n      } else if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadCX = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadCY = command.relative ? prevY + command.y1 : command.y2;\n      } else {\n        prevQuadCX = NaN;\n        prevQuadCY = NaN;\n      }\n\n      if (command.type & SVGPathData.LINE_COMMANDS ||\n        command.type & SVGPathData.ARC && (0 === command.rX || 0 === command.rY || !command.lArcFlag) ||\n        command.type & SVGPathData.CURVE_TO || command.type & SVGPathData.SMOOTH_CURVE_TO ||\n        command.type & SVGPathData.QUAD_TO || command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        const xRel = \"undefined\" === typeof command.x ? 0 :\n          (command.relative ? command.x : command.x - prevX);\n        const yRel = \"undefined\" === typeof command.y ? 0 :\n          (command.relative ? command.y : command.y - prevY);\n\n        x1Rel = !isNaN(prevQuadCX) ? prevQuadCX - prevX :\n          \"undefined\" === typeof command.x1 ? x1Rel :\n            command.relative ? command.x :\n              command.x1 - prevX;\n        y1Rel = !isNaN(prevQuadCY) ? prevQuadCY - prevY :\n          \"undefined\" === typeof command.y1 ? y1Rel :\n            command.relative ? command.y :\n              command.y1 - prevY;\n\n        const x2Rel = \"undefined\" === typeof command.x2 ? 0 :\n          (command.relative ? command.x : command.x2 - prevX);\n        const y2Rel = \"undefined\" === typeof command.y2 ? 0 :\n          (command.relative ? command.y : command.y2 - prevY);\n\n        if (abs(xRel) <= EPS && abs(yRel) <= EPS &&\n          abs(x1Rel) <= EPS && abs(y1Rel) <= EPS &&\n          abs(x2Rel) <= EPS && abs(y2Rel) <= EPS) {\n          skip = true;\n        }\n      }\n\n      if (command.type & SVGPathData.CLOSE_PATH) {\n        if (abs(prevX - pathStartX) <= EPS && abs(prevY - pathStartY) <= EPS) {\n          skip = true;\n        }\n      }\n\n      return skip ? [] : command;\n    });\n  }\n  // SVG Transforms : http://www.w3.org/TR/SVGTiny12/coords.html#TransformList\n  // Matrix : http://apike.ca/prog_svg_transform.html\n  // a c e\n  // b d f\n  export function MATRIX(a: number, b: number, c: number, d: number, e: number, f: number) {\n    assertNumbers(a, b, c, d, e, f);\n\n    return INFO((command, prevX, prevY, pathStartX) => {\n      const origX1 = command.x1;\n      const origX2 = command.x2;\n      // if isNaN(pathStartX), then this is the first command, which is ALWAYS an\n      // absolute MOVE_TO, regardless what the relative flag says\n      const comRel = command.relative && !isNaN(pathStartX);\n      const x = \"undefined\" !== typeof command.x ? command.x : (comRel ? 0 : prevX);\n      const y = \"undefined\" !== typeof command.y ? command.y : (comRel ? 0 : prevY);\n\n      if (command.type & SVGPathData.HORIZ_LINE_TO && 0 !== b) {\n        command.type = SVGPathData.LINE_TO;\n        command.y = command.relative ? 0 : prevY;\n      }\n      if (command.type & SVGPathData.VERT_LINE_TO && 0 !== c) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? 0 : prevX;\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        command.x = (command.x * a) + (y * c) + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        command.y = (x * b) + command.y * d + (comRel ? 0 : f);\n      }\n      if (\"undefined\" !== typeof command.x1) {\n        command.x1 = command.x1 * a + command.y1 * c + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y1) {\n        command.y1 = origX1 * b + command.y1 * d + (comRel ? 0 : f);\n      }\n      if (\"undefined\" !== typeof command.x2) {\n        command.x2 = command.x2 * a + command.y2 * c + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y2) {\n        command.y2 = origX2 * b + command.y2 * d + (comRel ? 0 : f);\n      }\n      function sqr(x: number) { return x * x; }\n      const det = a * d - b * c;\n\n      if (\"undefined\" !== typeof command.xRot) {\n        // Skip if this is a pure translation\n        if (1 !== a || 0 !== b || 0 !== c || 1 !== d) {\n          // Special case for singular matrix\n          if (0 === det) {\n            // In the singular case, the arc is compressed to a line. The actual geometric image of the original\n            // curve under this transform possibly extends beyond the starting and/or ending points of the segment, but\n            // for simplicity we ignore this detail and just replace this command with a single line segment.\n            delete command.rX;\n            delete command.rY;\n            delete command.xRot;\n            delete command.lArcFlag;\n            delete command.sweepFlag;\n            command.type = SVGPathData.LINE_TO;\n          } else {\n            // Convert to radians\n            const xRot = command.xRot * Math.PI / 180;\n\n            // Convert rotated ellipse to general conic form\n            // x0^2/rX^2 + y0^2/rY^2 - 1 = 0\n            // x0 = x*cos(xRot) + y*sin(xRot)\n            // y0 = -x*sin(xRot) + y*cos(xRot)\n            // --> A*x^2 + B*x*y + C*y^2 - 1 = 0, where\n            const sinRot = Math.sin(xRot);\n            const cosRot = Math.cos(xRot);\n            const xCurve = 1 / sqr(command.rX);\n            const yCurve = 1 / sqr(command.rY);\n            const A = sqr(cosRot) * xCurve + sqr(sinRot) * yCurve;\n            const B = 2 * sinRot * cosRot * (xCurve - yCurve);\n            const C = sqr(sinRot) * xCurve + sqr(cosRot) * yCurve;\n\n            // Apply matrix to A*x^2 + B*x*y + C*y^2 - 1 = 0\n            // x1 = a*x + c*y\n            // y1 = b*x + d*y\n            //      (we can ignore e and f, since pure translations don\"t affect the shape of the ellipse)\n            // --> A1*x1^2 + B1*x1*y1 + C1*y1^2 - det^2 = 0, where\n            const A1 = A * d * d - B * b * d + C * b * b;\n            const B1 = B * (a * d + b * c) - 2 * (A * c * d + C * a * b);\n            const C1 = A * c * c - B * a * c + C * a * a;\n\n            // Unapply newXRot to get back to axis-aligned ellipse equation\n            // x1 = x2*cos(newXRot) - y2*sin(newXRot)\n            // y1 = x2*sin(newXRot) + y2*cos(newXRot)\n            // A1*x1^2 + B1*x1*y1 + C1*y1^2 - det^2 =\n            //   x2^2*(A1*cos(newXRot)^2 + B1*sin(newXRot)*cos(newXRot) + C1*sin(newXRot)^2)\n            //   + x2*y2*(2*(C1 - A1)*sin(newXRot)*cos(newXRot) + B1*(cos(newXRot)^2 - sin(newXRot)^2))\n            //   + y2^2*(A1*sin(newXRot)^2 - B1*sin(newXRot)*cos(newXRot) + C1*cos(newXRot)^2)\n            //   (which must have the same zeroes as)\n            // x2^2/newRX^2 + y2^2/newRY^2 - 1\n            //   (so we have)\n            // 2*(C1 - A1)*sin(newXRot)*cos(newXRot) + B1*(cos(newXRot)^2 - sin(newXRot)^2) = 0\n            // (A1 - C1)*sin(2*newXRot) = B1*cos(2*newXRot)\n            // 2*newXRot = atan2(B1, A1 - C1)\n            const newXRot = ((Math.atan2(B1, A1 - C1) + Math.PI) % Math.PI) / 2;\n            // For any integer n, (atan2(B1, A1 - C1) + n*pi)/2 is a solution to the above; incrementing n just swaps\n            // the x and y radii computed below (since that\"s what rotating an ellipse by pi/2 does).  Choosing the\n            // rotation between 0 and pi/2 eliminates the ambiguity and leads to more predictable output.\n\n            // Finally, we get newRX and newRY from the same-zeroes relationship that gave us newXRot\n            const newSinRot = Math.sin(newXRot);\n            const newCosRot = Math.cos(newXRot);\n\n            command.rX = Math.abs(det) /\n              Math.sqrt(A1 * sqr(newCosRot) + B1 * newSinRot * newCosRot + C1 * sqr(newSinRot));\n            command.rY = Math.abs(det) /\n              Math.sqrt(A1 * sqr(newSinRot) - B1 * newSinRot * newCosRot + C1 * sqr(newCosRot));\n            command.xRot = newXRot * 180 / Math.PI;\n          }\n        }\n      }\n      // sweepFlag needs to be inverted when mirroring shapes\n      // see http://www.itk.ilstu.edu/faculty/javila/SVG/SVG_drawing1/elliptical_curve.htm\n      // m 65,10 a 50,25 0 1 0 50,25\n      // M 65,60 A 50,25 0 1 1 115,35\n      if (\"undefined\" !== typeof command.sweepFlag && 0 > det) {\n        command.sweepFlag = +!command.sweepFlag;\n      }\n      return command;\n    });\n  }\n  export function ROTATE(a: number, x = 0, y = 0) {\n    assertNumbers(a, x, y);\n    const sin = Math.sin(a);\n    const cos = Math.cos(a);\n\n    return MATRIX(cos, sin, -sin, cos, x - x * cos + y * sin, y - x * sin - y * cos);\n  }\n  export function TRANSLATE(dX: number, dY = 0) {\n    assertNumbers(dX, dY);\n    return MATRIX(1, 0, 0, 1, dX, dY);\n  }\n  export function SCALE(dX: number, dY = dX) {\n    assertNumbers(dX, dY);\n    return MATRIX(dX, 0, 0, dY, 0, 0);\n  }\n  export function SKEW_X(a: number) {\n    assertNumbers(a);\n    return MATRIX(1, 0, Math.atan(a), 1, 0, 0);\n  }\n  export function SKEW_Y(a: number) {\n    assertNumbers(a);\n    return MATRIX(1, Math.atan(a), 0, 1, 0, 0);\n  }\n  export function X_AXIS_SYMMETRY(xOffset = 0) {\n    assertNumbers(xOffset);\n    return MATRIX(-1, 0, 0, 1, xOffset, 0);\n  }\n  export function Y_AXIS_SYMMETRY(yOffset = 0) {\n    assertNumbers(yOffset);\n    return MATRIX(1, 0, 0, -1, 0, yOffset);\n  }\n  // Convert arc commands to curve commands\n  export function A_TO_C() {\n    return INFO((command, prevX, prevY) => {\n      if (SVGPathData.ARC === command.type) {\n        return a2c(command, command.relative ? 0 : prevX, command.relative ? 0 : prevY);\n      }\n      return command;\n    });\n  }\n  // @see annotateArcCommand\n  export function ANNOTATE_ARCS() {\n    return INFO((c, x1, y1) => {\n      if (c.relative) {\n        x1 = 0;\n        y1 = 0;\n      }\n      if (SVGPathData.ARC === c.type) {\n        annotateArcCommand(c, x1, y1);\n      }\n      return c;\n    });\n  }\n  export function CLONE() {\n    return (c: SVGCommand) => {\n      const result = {} as SVGCommand;\n      // tslint:disable-next-line\n      for (const key in c) {\n        result[key as keyof SVGCommand] = c[key as keyof SVGCommand];\n      }\n      return result;\n    };\n  }\n  // @see annotateArcCommand\n  export function CALCULATE_BOUNDS() {\n    const clone = CLONE();\n    const toAbs = TO_ABS();\n    const qtToC = QT_TO_C();\n    const normST = NORMALIZE_ST();\n    const f: TransformFunction & {minX: number, maxX: number, minY: number, maxY: number} =\n        INFO((command, prevXAbs, prevYAbs) => {\n      const c = normST(qtToC(toAbs(clone(command))));\n      function fixX(absX: number) {\n        if (absX > f.maxX) { f.maxX = absX; }\n        if (absX < f.minX) { f.minX = absX; }\n      }\n      function fixY(absY: number) {\n        if (absY > f.maxY) { f.maxY = absY; }\n        if (absY < f.minY) { f.minY = absY; }\n      }\n      if (c.type & SVGPathData.DRAWING_COMMANDS) {\n        fixX(prevXAbs);\n        fixY(prevYAbs);\n      }\n      if (c.type & SVGPathData.HORIZ_LINE_TO) {\n        fixX(c.x);\n      }\n      if (c.type & SVGPathData.VERT_LINE_TO) {\n        fixY(c.y);\n      }\n      if (c.type & SVGPathData.LINE_TO) {\n        fixX(c.x);\n        fixY(c.y);\n      }\n      if (c.type & SVGPathData.CURVE_TO) {\n        // add start and end points\n        fixX(c.x);\n        fixY(c.y);\n        const xDerivRoots = bezierRoot(prevXAbs, c.x1, c.x2, c.x);\n\n        for (const derivRoot of xDerivRoots) {\n          if (0 < derivRoot && 1 > derivRoot) {\n            fixX(bezierAt(prevXAbs, c.x1, c.x2, c.x, derivRoot));\n          }\n        }\n        const yDerivRoots = bezierRoot(prevYAbs, c.y1, c.y2, c.y);\n\n        for (const derivRoot of yDerivRoots) {\n          if (0 < derivRoot && 1 > derivRoot) {\n            fixY(bezierAt(prevYAbs, c.y1, c.y2, c.y, derivRoot));\n          }\n        }\n      }\n      if (c.type & SVGPathData.ARC) {\n        // add start and end points\n        fixX(c.x);\n        fixY(c.y);\n        annotateArcCommand(c, prevXAbs, prevYAbs);\n        // p = cos(phi) * xv + sin(phi) * yv\n        // dp = -sin(phi) * xv + cos(phi) * yv = 0\n        const xRotRad = c.xRot / 180 * Math.PI;\n        // points on ellipse for phi = 0° and phi = 90°\n        const x0 = Math.cos(xRotRad) * c.rX;\n        const y0 = Math.sin(xRotRad) * c.rX;\n        const x90 = -Math.sin(xRotRad) * c.rY;\n        const y90 = Math.cos(xRotRad) * c.rY;\n\n        // annotateArcCommand returns phi1 and phi2 such that -180° < phi1 < 180° and phi2 is smaller or greater\n        // depending on the sweep flag. Calculate phiMin, phiMax such that -180° < phiMin < 180° and phiMin < phiMax\n        const [phiMin, phiMax] = c.phi1 < c.phi2 ?\n          [c.phi1, c.phi2] :\n          (-180 > c.phi2 ? [c.phi2 + 360, c.phi1 + 360] : [c.phi2, c.phi1]);\n        const normalizeXiEta = ([xi, eta]: [number, number]) => {\n          const phiRad = Math.atan2(eta, xi);\n          const phi = phiRad * 180 / Math.PI;\n\n          return phi < phiMin ? phi + 360 : phi;\n        };\n        // xi = cos(phi), eta = sin(phi)\n\n        const xDerivRoots = intersectionUnitCircleLine(x90, -x0, 0).map(normalizeXiEta);\n        for (const derivRoot of xDerivRoots) {\n          if (derivRoot > phiMin && derivRoot < phiMax) {\n            fixX(arcAt(c.cX, x0, x90, derivRoot));\n          }\n        }\n\n        const yDerivRoots = intersectionUnitCircleLine(y90, -y0, 0).map(normalizeXiEta);\n        for (const derivRoot of yDerivRoots) {\n          if (derivRoot > phiMin && derivRoot < phiMax) {\n            fixY(arcAt(c.cY, y0, y90, derivRoot));\n          }\n        }\n      }\n      return command;\n    }) as any;\n\n    f.minX = Infinity;\n    f.maxX = -Infinity;\n    f.minY = Infinity;\n    f.maxY = -Infinity;\n    return f;\n  }\n}\n","import { SVGPathDataTransformer } from \"./SVGPathDataTransformer\";\nimport { TransformFunction } from \"./types\";\n\nexport abstract class TransformableSVG {\n  round(x?: number) {\n    return this.transform(SVGPathDataTransformer.ROUND(x));\n  }\n\n  toAbs() {\n    return this.transform(SVGPathDataTransformer.TO_ABS());\n  }\n\n  toRel() {\n    return this.transform(SVGPathDataTransformer.TO_REL());\n  }\n\n  normalizeHVZ(a?: boolean, b?: boolean, c?: boolean) {\n    return this.transform(SVGPathDataTransformer.NORMALIZE_HVZ(a, b, c));\n  }\n\n  normalizeST() {\n    return this.transform(SVGPathDataTransformer.NORMALIZE_ST());\n  }\n\n  qtToC() {\n    return this.transform(SVGPathDataTransformer.QT_TO_C());\n  }\n\n  aToC() {\n    return this.transform(SVGPathDataTransformer.A_TO_C());\n  }\n\n  sanitize(eps?: number) {\n    return this.transform(SVGPathDataTransformer.SANITIZE(eps));\n  }\n\n  translate(x: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.TRANSLATE(x, y));\n  }\n\n  scale(x: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.SCALE(x, y));\n  }\n\n  rotate(a: number, x?: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.ROTATE(a, x, y));\n  }\n\n  matrix(a: number, b: number, c: number, d: number, e: number, f: number) {\n    return this.transform(SVGPathDataTransformer.MATRIX(a, b, c, d, e, f));\n  }\n\n  skewX(a: number) {\n    return this.transform(SVGPathDataTransformer.SKEW_X(a));\n  }\n\n  skewY(a: number) {\n    return this.transform(SVGPathDataTransformer.SKEW_Y(a));\n  }\n\n  xSymmetry(xOffset?: number) {\n    return this.transform(SVGPathDataTransformer.X_AXIS_SYMMETRY(xOffset));\n  }\n\n  ySymmetry(yOffset?: number) {\n    return this.transform(SVGPathDataTransformer.Y_AXIS_SYMMETRY(yOffset));\n  }\n\n  annotateArcs() {\n    return this.transform(SVGPathDataTransformer.ANNOTATE_ARCS());\n  }\n\n  abstract transform(transformFunction: TransformFunction): this;\n}\n","// Parse SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\nimport { COMMAND_ARG_COUNTS, SVGPathData } from \"./SVGPathData\";\nimport { TransformableSVG } from \"./TransformableSVG\";\nimport { SVGCommand, TransformFunction } from \"./types\";\n// Private consts : Char groups\nconst isWhiteSpace = (c: string) =>\n  \" \" === c || \"\\t\" === c || \"\\r\" === c || \"\\n\" === c;\nconst isDigit = (c: string) =>\n  \"0\".charCodeAt(0) <= c.charCodeAt(0) && c.charCodeAt(0) <= \"9\".charCodeAt(0);\nconst COMMANDS = \"mMzZlLhHvVcCsSqQtTaA\";\n\nexport class SVGPathDataParser extends TransformableSVG {\n  private curNumber: string = \"\";\n  private curCommandType: SVGCommand[\"type\"] | -1 = -1;\n  private curCommandRelative = false;\n  private canParseCommandOrComma = true;\n  private curNumberHasExp = false;\n  private curNumberHasExpDigits = false;\n  private curNumberHasDecimal = false;\n  private curArgs: number[] = [];\n\n  constructor() {\n    super();\n  }\n\n  finish(commands: SVGCommand[] = []) {\n    this.parse(\" \", commands);\n    // Adding residual command\n    if (0 !== this.curArgs.length || !this.canParseCommandOrComma) {\n      throw new SyntaxError(\"Unterminated command at the path end.\");\n    }\n    return commands;\n  }\n\n  parse(str: string, commands: SVGCommand[] = []) {\n    const finishCommand = (command: SVGCommand) => {\n      commands.push(command);\n      this.curArgs.length = 0;\n      this.canParseCommandOrComma = true;\n    };\n\n    for (let i = 0; i < str.length; i++) {\n      const c = str[i];\n      // White spaces parsing\n      const isAArcFlag = this.curCommandType === SVGPathData.ARC &&\n        (this.curArgs.length === 3 || this.curArgs.length === 4) &&\n        this.curNumber.length === 1 &&\n        (this.curNumber === \"0\" || this.curNumber === \"1\");\n      const isEndingDigit = isDigit(c) && (\n        (this.curNumber === \"0\" && c === \"0\") ||\n        isAArcFlag\n      );\n\n      if (\n        isDigit(c) &&\n        !isEndingDigit\n      ) {\n        this.curNumber += c;\n        this.curNumberHasExpDigits = this.curNumberHasExp;\n        continue;\n      }\n      if (\"e\" === c || \"E\" === c) {\n        this.curNumber += c;\n        this.curNumberHasExp = true;\n        continue;\n      }\n      if (\n        (\"-\" === c || \"+\" === c) &&\n        this.curNumberHasExp &&\n        !this.curNumberHasExpDigits\n      ) {\n        this.curNumber += c;\n        continue;\n      }\n      // if we already have a \".\", it means we are starting a new number\n      if (\".\" === c && !this.curNumberHasExp && !this.curNumberHasDecimal && !isAArcFlag) {\n        this.curNumber += c;\n        this.curNumberHasDecimal = true;\n        continue;\n      }\n\n      // New number\n      if (this.curNumber && -1 !== this.curCommandType) {\n        const val = Number(this.curNumber);\n        if (isNaN(val)) {\n          throw new SyntaxError(`Invalid number ending at ${i}`);\n        }\n        if (this.curCommandType === SVGPathData.ARC) {\n          if (0 === this.curArgs.length || 1 === this.curArgs.length) {\n            if (0 > val) {\n              throw new SyntaxError(\n                `Expected positive number, got \"${val}\" at index \"${i}\"`,\n              );\n            }\n          } else if (3 === this.curArgs.length || 4 === this.curArgs.length) {\n            if (\"0\" !== this.curNumber && \"1\" !== this.curNumber) {\n              throw new SyntaxError(\n                `Expected a flag, got \"${this.curNumber}\" at index \"${i}\"`,\n              );\n            }\n          }\n        }\n        this.curArgs.push(val);\n        if (this.curArgs.length === COMMAND_ARG_COUNTS[this.curCommandType]) {\n          if (SVGPathData.HORIZ_LINE_TO === this.curCommandType) {\n            finishCommand({\n              type: SVGPathData.HORIZ_LINE_TO,\n              relative: this.curCommandRelative,\n              x: val,\n            });\n          } else if (SVGPathData.VERT_LINE_TO === this.curCommandType) {\n            finishCommand({\n              type: SVGPathData.VERT_LINE_TO,\n              relative: this.curCommandRelative,\n              y: val,\n            });\n            // Move to / line to / smooth quadratic curve to commands (x, y)\n          } else if (\n            this.curCommandType === SVGPathData.MOVE_TO ||\n            this.curCommandType === SVGPathData.LINE_TO ||\n            this.curCommandType === SVGPathData.SMOOTH_QUAD_TO\n          ) {\n            finishCommand({\n              type: this.curCommandType,\n              relative: this.curCommandRelative,\n              x: this.curArgs[0],\n              y: this.curArgs[1],\n            } as SVGCommand);\n            // Switch to line to state\n            if (SVGPathData.MOVE_TO === this.curCommandType) {\n              this.curCommandType = SVGPathData.LINE_TO;\n            }\n          } else if (this.curCommandType === SVGPathData.CURVE_TO) {\n            finishCommand({\n              type: SVGPathData.CURVE_TO,\n              relative: this.curCommandRelative,\n              x1: this.curArgs[0],\n              y1: this.curArgs[1],\n              x2: this.curArgs[2],\n              y2: this.curArgs[3],\n              x: this.curArgs[4],\n              y: this.curArgs[5],\n            });\n          } else if (this.curCommandType === SVGPathData.SMOOTH_CURVE_TO) {\n            finishCommand({\n              type: SVGPathData.SMOOTH_CURVE_TO,\n              relative: this.curCommandRelative,\n              x2: this.curArgs[0],\n              y2: this.curArgs[1],\n              x: this.curArgs[2],\n              y: this.curArgs[3],\n            });\n          } else if (this.curCommandType === SVGPathData.QUAD_TO) {\n            finishCommand({\n              type: SVGPathData.QUAD_TO,\n              relative: this.curCommandRelative,\n              x1: this.curArgs[0],\n              y1: this.curArgs[1],\n              x: this.curArgs[2],\n              y: this.curArgs[3],\n            });\n          } else if (this.curCommandType === SVGPathData.ARC) {\n            finishCommand({\n              type: SVGPathData.ARC,\n              relative: this.curCommandRelative,\n              rX: this.curArgs[0],\n              rY: this.curArgs[1],\n              xRot: this.curArgs[2],\n              lArcFlag: this.curArgs[3] as 0 | 1,\n              sweepFlag: this.curArgs[4] as 0 | 1,\n              x: this.curArgs[5],\n              y: this.curArgs[6],\n            });\n          }\n        }\n        this.curNumber = \"\";\n        this.curNumberHasExpDigits = false;\n        this.curNumberHasExp = false;\n        this.curNumberHasDecimal = false;\n        this.canParseCommandOrComma = true;\n      }\n      // Continue if a white space or a comma was detected\n      if (isWhiteSpace(c)) {\n        continue;\n      }\n      if (\",\" === c && this.canParseCommandOrComma) {\n        // L 0,0, H is not valid:\n        this.canParseCommandOrComma = false;\n        continue;\n      }\n      // if a sign is detected, then parse the new number\n      if (\"+\" === c || \"-\" === c || \".\" === c) {\n        this.curNumber = c;\n        this.curNumberHasDecimal = \".\" === c;\n        continue;\n      }\n      // if a 0 is detected, then parse the new number\n      if (isEndingDigit) {\n        this.curNumber = c;\n        this.curNumberHasDecimal = false;\n        continue;\n      }\n\n      // Adding residual command\n      if (0 !== this.curArgs.length) {\n        throw new SyntaxError(`Unterminated command at index ${i}.`);\n      }\n      if (!this.canParseCommandOrComma) {\n        throw new SyntaxError(\n          `Unexpected character \"${c}\" at index ${i}. Command cannot follow comma`,\n        );\n      }\n      this.canParseCommandOrComma = false;\n      // Detecting the next command\n      if (\"z\" === c || \"Z\" === c) {\n        commands.push({\n          type: SVGPathData.CLOSE_PATH,\n        });\n        this.canParseCommandOrComma = true;\n        this.curCommandType = -1;\n        continue;\n        // Horizontal move to command\n      } else if (\"h\" === c || \"H\" === c) {\n        this.curCommandType = SVGPathData.HORIZ_LINE_TO;\n        this.curCommandRelative = \"h\" === c;\n        // Vertical move to command\n      } else if (\"v\" === c || \"V\" === c) {\n        this.curCommandType = SVGPathData.VERT_LINE_TO;\n        this.curCommandRelative = \"v\" === c;\n        // Move to command\n      } else if (\"m\" === c || \"M\" === c) {\n        this.curCommandType = SVGPathData.MOVE_TO;\n        this.curCommandRelative = \"m\" === c;\n        // Line to command\n      } else if (\"l\" === c || \"L\" === c) {\n        this.curCommandType = SVGPathData.LINE_TO;\n        this.curCommandRelative = \"l\" === c;\n        // Curve to command\n      } else if (\"c\" === c || \"C\" === c) {\n        this.curCommandType = SVGPathData.CURVE_TO;\n        this.curCommandRelative = \"c\" === c;\n        // Smooth curve to command\n      } else if (\"s\" === c || \"S\" === c) {\n        this.curCommandType = SVGPathData.SMOOTH_CURVE_TO;\n        this.curCommandRelative = \"s\" === c;\n        // Quadratic bezier curve to command\n      } else if (\"q\" === c || \"Q\" === c) {\n        this.curCommandType = SVGPathData.QUAD_TO;\n        this.curCommandRelative = \"q\" === c;\n        // Smooth quadratic bezier curve to command\n      } else if (\"t\" === c || \"T\" === c) {\n        this.curCommandType = SVGPathData.SMOOTH_QUAD_TO;\n        this.curCommandRelative = \"t\" === c;\n        // Elliptic arc command\n      } else if (\"a\" === c || \"A\" === c) {\n        this.curCommandType = SVGPathData.ARC;\n        this.curCommandRelative = \"a\" === c;\n      } else {\n        throw new SyntaxError(`Unexpected character \"${c}\" at index ${i}.`);\n      }\n    }\n    return commands;\n  }\n  /**\n   * Return a wrapper around this parser which applies the transformation on parsed commands.\n   */\n  transform(transform: TransformFunction) {\n    const result = Object.create(this, {\n      parse: {\n        value(chunk: string, commands: SVGCommand[] = []) {\n          const parsedCommands = Object.getPrototypeOf(this).parse.call(\n            this,\n            chunk,\n          );\n          for (const c of parsedCommands) {\n            const cT = transform(c);\n            if (Array.isArray(cT)) {\n              commands.push(...cT);\n            } else {\n              commands.push(cT);\n            }\n          }\n          return commands;\n        },\n      },\n    });\n    return result as this;\n  }\n}\n","import { encodeSVGPath } from \"./SVGPathDataEncoder\";\nimport { SVGPathDataParser } from \"./SVGPathDataParser\";\nimport { SVGPathDataTransformer } from \"./SVGPathDataTransformer\";\nimport { TransformableSVG } from \"./TransformableSVG\";\nimport { SVGCommand } from \"./types\";\n\nexport class SVGPathData extends TransformableSVG {\n  commands: SVGCommand[];\n  constructor(content: string | SVGCommand[]) {\n    super();\n    if (\"string\" === typeof content) {\n      this.commands = SVGPathData.parse(content);\n    } else {\n      this.commands = content;\n    }\n  }\n\n  encode() {\n    return SVGPathData.encode(this.commands);\n  }\n\n  getBounds() {\n    const boundsTransform = SVGPathDataTransformer.CALCULATE_BOUNDS();\n\n    this.transform(boundsTransform);\n    return boundsTransform;\n  }\n\n  transform(\n    transformFunction: (input: SVGCommand) => SVGCommand | SVGCommand[],\n  ) {\n    const newCommands = [];\n\n    for (const command of this.commands) {\n      const transformedCommand = transformFunction(command);\n\n      if (Array.isArray(transformedCommand)) {\n        newCommands.push(...transformedCommand);\n      } else {\n        newCommands.push(transformedCommand);\n      }\n    }\n    this.commands = newCommands;\n    return this;\n  }\n\n  static encode(commands: SVGCommand[]) {\n    return encodeSVGPath(commands);\n      }\n\n  static parse(path: string) {\n    const parser = new SVGPathDataParser();\n    const commands: SVGCommand[] = [];\n    parser.parse(path, commands);\n    parser.finish(commands);\n    return commands;\n  }\n\n  static readonly CLOSE_PATH: 1 = 1;\n  static readonly MOVE_TO: 2 = 2;\n  static readonly HORIZ_LINE_TO: 4 = 4;\n  static readonly VERT_LINE_TO: 8 = 8;\n  static readonly LINE_TO: 16 = 16;\n  static readonly CURVE_TO: 32 = 32;\n  static readonly SMOOTH_CURVE_TO: 64 = 64;\n  static readonly QUAD_TO: 128 = 128;\n  static readonly SMOOTH_QUAD_TO: 256 = 256;\n  static readonly ARC: 512 = 512;\n  static readonly LINE_COMMANDS = SVGPathData.LINE_TO | SVGPathData.HORIZ_LINE_TO | SVGPathData.VERT_LINE_TO;\n  static readonly DRAWING_COMMANDS = SVGPathData.HORIZ_LINE_TO | SVGPathData.VERT_LINE_TO | SVGPathData.LINE_TO |\n  SVGPathData.CURVE_TO | SVGPathData.SMOOTH_CURVE_TO | SVGPathData.QUAD_TO |\n  SVGPathData.SMOOTH_QUAD_TO | SVGPathData.ARC;\n}\n\nexport const COMMAND_ARG_COUNTS = {\n    [SVGPathData.MOVE_TO]: 2,\n    [SVGPathData.LINE_TO]: 2,\n    [SVGPathData.HORIZ_LINE_TO]: 1,\n    [SVGPathData.VERT_LINE_TO]: 1,\n    [SVGPathData.CLOSE_PATH]: 0,\n    [SVGPathData.QUAD_TO]: 4,\n    [SVGPathData.SMOOTH_QUAD_TO]: 2,\n    [SVGPathData.CURVE_TO]: 6,\n    [SVGPathData.SMOOTH_CURVE_TO]: 4,\n    [SVGPathData.ARC]: 7,\n};\n\nexport {encodeSVGPath} from \"./SVGPathDataEncoder\";\nexport {SVGPathDataParser} from \"./SVGPathDataParser\";\nexport {SVGPathDataTransformer} from \"./SVGPathDataTransformer\";\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/* eslint-disable no-bitwise -- used for calculations */\n\n/* eslint-disable unicorn/prefer-query-selector -- aiming at\n  backward-compatibility */\n\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.\n*\n* @module StackBlur\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\nvar mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @param {boolean} useOffset\n * @param {boolean} skipStyles\n * @returns {undefined}\n */\n\nfunction processImage(img, canvas, radius, blurAlphaChannel, useOffset, skipStyles) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n\n  if (!img || !('naturalWidth' in img)) {\n    return;\n  }\n\n  var dimensionType = useOffset ? 'offset' : 'natural';\n  var w = img[dimensionType + 'Width'];\n  var h = img[dimensionType + 'Height'];\n\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n\n  if (!skipStyles) {\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, w, h);\n\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\n\n\nfunction getImageDataFromCanvas(canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || _typeof(canvas) !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError('Expecting canvas with `getContext` method ' + 'in processCanvasRGB(A) calls!');\n  }\n\n  var context = canvas.getContext('2d');\n\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGBA(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGBA(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGBA(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null,\n      stackOut = null,\n      yw = 0,\n      yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n\n  for (var y = 0; y < height; y++) {\n    stack = stackStart;\n    var pr = pixels[yi],\n        pg = pixels[yi + 1],\n        pb = pixels[yi + 2],\n        pa = pixels[yi + 3];\n\n    for (var _i = 0; _i < radiusPlus1; _i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    var rInSum = 0,\n        gInSum = 0,\n        bInSum = 0,\n        aInSum = 0,\n        rOutSum = radiusPlus1 * pr,\n        gOutSum = radiusPlus1 * pg,\n        bOutSum = radiusPlus1 * pb,\n        aOutSum = radiusPlus1 * pa,\n        rSum = sumFactor * pr,\n        gSum = sumFactor * pg,\n        bSum = sumFactor * pb,\n        aSum = sumFactor * pa;\n\n    for (var _i2 = 1; _i2 < radiusPlus1; _i2++) {\n      var p = yi + ((widthMinus1 < _i2 ? widthMinus1 : _i2) << 2);\n      var r = pixels[p],\n          g = pixels[p + 1],\n          b = pixels[p + 2],\n          a = pixels[p + 3];\n      var rbs = radiusPlus1 - _i2;\n      rSum += (stack.r = r) * rbs;\n      gSum += (stack.g = g) * rbs;\n      bSum += (stack.b = b) * rbs;\n      aSum += (stack.a = a) * rbs;\n      rInSum += r;\n      gInSum += g;\n      bInSum += b;\n      aInSum += a;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var x = 0; x < width; x++) {\n      var paInitial = aSum * mulSum >> shgSum;\n      pixels[yi + 3] = paInitial;\n\n      if (paInitial !== 0) {\n        var _a2 = 255 / paInitial;\n\n        pixels[yi] = (rSum * mulSum >> shgSum) * _a2;\n        pixels[yi + 1] = (gSum * mulSum >> shgSum) * _a2;\n        pixels[yi + 2] = (bSum * mulSum >> shgSum) * _a2;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n\n      var _p = x + radius + 1;\n\n      _p = yw + (_p < widthMinus1 ? _p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[_p];\n      gInSum += stackIn.g = pixels[_p + 1];\n      bInSum += stackIn.b = pixels[_p + 2];\n      aInSum += stackIn.a = pixels[_p + 3];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n      stackIn = stackIn.next;\n      var _stackOut = stackOut,\n          _r = _stackOut.r,\n          _g = _stackOut.g,\n          _b = _stackOut.b,\n          _a = _stackOut.a;\n      rOutSum += _r;\n      gOutSum += _g;\n      bOutSum += _b;\n      aOutSum += _a;\n      rInSum -= _r;\n      gInSum -= _g;\n      bInSum -= _b;\n      aInSum -= _a;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (var _x = 0; _x < width; _x++) {\n    yi = _x << 2;\n\n    var _pr = pixels[yi],\n        _pg = pixels[yi + 1],\n        _pb = pixels[yi + 2],\n        _pa = pixels[yi + 3],\n        _rOutSum = radiusPlus1 * _pr,\n        _gOutSum = radiusPlus1 * _pg,\n        _bOutSum = radiusPlus1 * _pb,\n        _aOutSum = radiusPlus1 * _pa,\n        _rSum = sumFactor * _pr,\n        _gSum = sumFactor * _pg,\n        _bSum = sumFactor * _pb,\n        _aSum = sumFactor * _pa;\n\n    stack = stackStart;\n\n    for (var _i3 = 0; _i3 < radiusPlus1; _i3++) {\n      stack.r = _pr;\n      stack.g = _pg;\n      stack.b = _pb;\n      stack.a = _pa;\n      stack = stack.next;\n    }\n\n    var yp = width;\n    var _gInSum = 0,\n        _bInSum = 0,\n        _aInSum = 0,\n        _rInSum = 0;\n\n    for (var _i4 = 1; _i4 <= radius; _i4++) {\n      yi = yp + _x << 2;\n\n      var _rbs = radiusPlus1 - _i4;\n\n      _rSum += (stack.r = _pr = pixels[yi]) * _rbs;\n      _gSum += (stack.g = _pg = pixels[yi + 1]) * _rbs;\n      _bSum += (stack.b = _pb = pixels[yi + 2]) * _rbs;\n      _aSum += (stack.a = _pa = pixels[yi + 3]) * _rbs;\n      _rInSum += _pr;\n      _gInSum += _pg;\n      _bInSum += _pb;\n      _aInSum += _pa;\n      stack = stack.next;\n\n      if (_i4 < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = _x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var _y = 0; _y < height; _y++) {\n      var _p2 = yi << 2;\n\n      pixels[_p2 + 3] = _pa = _aSum * mulSum >> shgSum;\n\n      if (_pa > 0) {\n        _pa = 255 / _pa;\n        pixels[_p2] = (_rSum * mulSum >> shgSum) * _pa;\n        pixels[_p2 + 1] = (_gSum * mulSum >> shgSum) * _pa;\n        pixels[_p2 + 2] = (_bSum * mulSum >> shgSum) * _pa;\n      } else {\n        pixels[_p2] = pixels[_p2 + 1] = pixels[_p2 + 2] = 0;\n      }\n\n      _rSum -= _rOutSum;\n      _gSum -= _gOutSum;\n      _bSum -= _bOutSum;\n      _aSum -= _aOutSum;\n      _rOutSum -= stackIn.r;\n      _gOutSum -= stackIn.g;\n      _bOutSum -= stackIn.b;\n      _aOutSum -= stackIn.a;\n      _p2 = _x + ((_p2 = _y + radiusPlus1) < heightMinus1 ? _p2 : heightMinus1) * width << 2;\n      _rSum += _rInSum += stackIn.r = pixels[_p2];\n      _gSum += _gInSum += stackIn.g = pixels[_p2 + 1];\n      _bSum += _bInSum += stackIn.b = pixels[_p2 + 2];\n      _aSum += _aInSum += stackIn.a = pixels[_p2 + 3];\n      stackIn = stackIn.next;\n      _rOutSum += _pr = stackOut.r;\n      _gOutSum += _pg = stackOut.g;\n      _bOutSum += _pb = stackOut.b;\n      _aOutSum += _pa = stackOut.a;\n      _rInSum -= _pr;\n      _gInSum -= _pg;\n      _bInSum -= _pb;\n      _aInSum -= _pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGB(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGB(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n  var p, rbs;\n  var yw = 0,\n      yi = 0;\n\n  for (var y = 0; y < height; y++) {\n    var pr = pixels[yi],\n        pg = pixels[yi + 1],\n        pb = pixels[yi + 2],\n        rOutSum = radiusPlus1 * pr,\n        gOutSum = radiusPlus1 * pg,\n        bOutSum = radiusPlus1 * pb,\n        rSum = sumFactor * pr,\n        gSum = sumFactor * pg,\n        bSum = sumFactor * pb;\n    stack = stackStart;\n\n    for (var _i5 = 0; _i5 < radiusPlus1; _i5++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    var rInSum = 0,\n        gInSum = 0,\n        bInSum = 0;\n\n    for (var _i6 = 1; _i6 < radiusPlus1; _i6++) {\n      p = yi + ((widthMinus1 < _i6 ? widthMinus1 : _i6) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - _i6);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var x = 0; x < width; x++) {\n      pixels[yi] = rSum * mulSum >> shgSum;\n      pixels[yi + 1] = gSum * mulSum >> shgSum;\n      pixels[yi + 2] = bSum * mulSum >> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (var _x2 = 0; _x2 < width; _x2++) {\n    yi = _x2 << 2;\n\n    var _pr2 = pixels[yi],\n        _pg2 = pixels[yi + 1],\n        _pb2 = pixels[yi + 2],\n        _rOutSum2 = radiusPlus1 * _pr2,\n        _gOutSum2 = radiusPlus1 * _pg2,\n        _bOutSum2 = radiusPlus1 * _pb2,\n        _rSum2 = sumFactor * _pr2,\n        _gSum2 = sumFactor * _pg2,\n        _bSum2 = sumFactor * _pb2;\n\n    stack = stackStart;\n\n    for (var _i7 = 0; _i7 < radiusPlus1; _i7++) {\n      stack.r = _pr2;\n      stack.g = _pg2;\n      stack.b = _pb2;\n      stack = stack.next;\n    }\n\n    var _rInSum2 = 0,\n        _gInSum2 = 0,\n        _bInSum2 = 0;\n\n    for (var _i8 = 1, yp = width; _i8 <= radius; _i8++) {\n      yi = yp + _x2 << 2;\n      _rSum2 += (stack.r = _pr2 = pixels[yi]) * (rbs = radiusPlus1 - _i8);\n      _gSum2 += (stack.g = _pg2 = pixels[yi + 1]) * rbs;\n      _bSum2 += (stack.b = _pb2 = pixels[yi + 2]) * rbs;\n      _rInSum2 += _pr2;\n      _gInSum2 += _pg2;\n      _bInSum2 += _pb2;\n      stack = stack.next;\n\n      if (_i8 < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = _x2;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var _y2 = 0; _y2 < height; _y2++) {\n      p = yi << 2;\n      pixels[p] = _rSum2 * mulSum >> shgSum;\n      pixels[p + 1] = _gSum2 * mulSum >> shgSum;\n      pixels[p + 2] = _bSum2 * mulSum >> shgSum;\n      _rSum2 -= _rOutSum2;\n      _gSum2 -= _gOutSum2;\n      _bSum2 -= _bOutSum2;\n      _rOutSum2 -= stackIn.r;\n      _gOutSum2 -= stackIn.g;\n      _bOutSum2 -= stackIn.b;\n      p = _x2 + ((p = _y2 + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      _rSum2 += _rInSum2 += stackIn.r = pixels[p];\n      _gSum2 += _gInSum2 += stackIn.g = pixels[p + 1];\n      _bSum2 += _bInSum2 += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      _rOutSum2 += _pr2 = stackOut.r;\n      _gOutSum2 += _pg2 = stackOut.g;\n      _bOutSum2 += _pb2 = stackOut.b;\n      _rInSum2 -= _pr2;\n      _gInSum2 -= _pg2;\n      _bInSum2 -= _pb2;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n *\n */\n\n\nvar BlurStack =\n/**\n * Set properties.\n */\nfunction BlurStack() {\n  _classCallCheck(this, BlurStack);\n\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n};\n\nexport { BlurStack, processCanvasRGB as canvasRGB, processCanvasRGBA as canvasRGBA, processImage as image, processImageDataRGB as imageDataRGB, processImageDataRGBA as imageDataRGBA };\n"],"sourceRoot":""}